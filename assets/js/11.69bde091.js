(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{183:function(i,t,v){i.exports=v.p+"assets/img/CICD.9618825e.png"},369:function(i,t,v){"use strict";v.r(t);var _=[function(){var i=this,t=i.$createElement,_=i._self._c||t;return _("div",{staticClass:"content"},[_("h3",{attrs:{id:"lint-与-ci-持续集成-与-cd-持续部署"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#lint-与-ci-持续集成-与-cd-持续部署"}},[i._v("#")]),i._v(" lint 与 CI 持续集成 与 CD 持续部署")]),i._v(" "),_("p",[_("img",{attrs:{src:v(183),alt:"cicd"}})]),i._v(" "),_("h4",{attrs:{id:"ci-cd-产生的发展历程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#ci-cd-产生的发展历程"}},[i._v("#")]),i._v(" CI/CD 产生的发展历程")]),i._v(" "),_("ul",[_("li",[i._v("最开始：资源直接 ftp 上传服务器---这种方式不安全")]),i._v(" "),_("li",[i._v("SSH 脚本部署")]),i._v(" "),_("li",[i._v("构建服务器(脚本的一致性)----\x3e服务器")]),i._v(" "),_("li",[i._v("docker（多构建）+ 管理 k8s + 自动构建发布平台 + 检查(持续构建、持续交付)")])]),i._v(" "),_("h4",{attrs:{id:"本地代码检查"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#本地代码检查"}},[i._v("#")]),i._v(" 本地代码检查")]),i._v(" "),_("ul",[_("li",[i._v("eslint编辑时检查 或 prettier")]),i._v(" "),_("li",[i._v("pre-commit时检查通过才可提交-----huskey, lint-stage")]),i._v(" "),_("li",[i._v("git hooks 常用的: precommit, prepush，")]),i._v(" "),_("li",[i._v("eslint-loader 构建部署检查")]),i._v(" "),_("li",[i._v("husky原理\n"),_("ul",[_("li",[i._v("在~/.git/hooks目录，是一些可执行文件")]),i._v(" "),_("li",[i._v("可以自定义脚本的位置，git config 'core.hooksPath' .husky")]),i._v(" "),_("li",[i._v("在~/.husky 目录下手动创建 hook 脚本")])])]),i._v(" "),_("li",[i._v("gitHooks配置，yorkie fork 的 husky")]),i._v(" "),_("li",[i._v("lint-staged 变动部分检查，对暂存文件列表运行脚本")])]),i._v(" "),_("h4",{attrs:{id:"实现-ci-与-cd"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#实现-ci-与-cd"}},[i._v("#")]),i._v(" 实现 CI 与 CD")]),i._v(" "),_("ul",[_("li",[i._v("CI 持续集成\n"),_("ul",[_("li",[i._v("借助 git hooks对当前代码在构建服务器中进行自动构建、测试及部署\n"),_("ul",[_("li",[i._v("提交时代码检查")]),i._v(" "),_("li",[i._v("实现自动化语法检查、测试，如果没有通过无法进行代码合并")]),i._v(" "),_("li",[i._v("检查 "),_("code",[i._v("npm 库")]),i._v("、"),_("code",[i._v("构建镜像容器")]),i._v("的风险----synk, audit")]),i._v(" "),_("li",[i._v("对当前分支代码构建"),_("code",[i._v("独立镜像")]),i._v("并"),_("code",[i._v("生成独立的分支环境地址")]),i._v("进行测试")]),i._v(" "),_("li",[i._v("合并到主分支，自动构建镜像并部署到生成环境")])])])])]),i._v(" "),_("li",[i._v("CD 持续部署----免费 CICD 服务github actions\n"),_("ul",[_("li",[i._v("分支合并自动构建(dev)")]),i._v(" "),_("li",[i._v("jenkens----发布流程")]),i._v(" "),_("li",[i._v("docker----容器，镜像-----Dockerfile")]),i._v(" "),_("li",[i._v("wayne----可视化发布平台")]),i._v(" "),_("li",[i._v("k8s----管理 docker 容器")])])])])])}],e=v(0),s=Object(e.a)({},(function(){var i=this.$createElement;this._self._c;return this._m(0)}),_,!1,null,null,null);t.default=s.exports}}]);