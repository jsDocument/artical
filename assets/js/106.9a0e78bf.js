(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{285:function(s,t,a){"use strict";a.r(t);var v=a(0),n=Object(v.a)({},(function(){var s=this.$createElement;this._self._c;return this._m(0)}),[function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("div",{staticClass:"content"},[a("h2",{attrs:{id:"目录或文档"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目录或文档"}},[s._v("#")]),s._v(" 目录或文档")]),s._v(" "),a("ol",[a("li",[s._v("ls -t时间排序，-S大小排序，-F附加数据结构")]),s._v(" "),a("li",[s._v("nl 输出添加行号，会添加样式")]),s._v(" "),a("li",[s._v("chattr, lsattr 隐藏属性是否显示")]),s._v(" "),a("li",[s._v("mkdir, rmdir 目录创建与删了")]),s._v(" "),a("li",[s._v("cd 更改目录")]),s._v(" "),a("li",[s._v("mv, cp 移动与复制 -a 包含特性一起复制；-p 同属性一起复制；- i 询问是否覆盖；-u 有差异才复制")]),s._v(" "),a("li",[s._v("touch, rm 创建与删除")]),s._v(" "),a("li",[s._v("file 判断类型")]),s._v(" "),a("li",[s._v("ln 连结")]),s._v(" "),a("li",[s._v("sort [] filenames 将文件进行排序，并将排序结果输出 [-d 排序处理英文、数字、空格字符，-f小写视为大写，-i 040~176之间的ASCII，-b忽略每行开始出的空格 -c 检查是否已排序，-m几个排序好的文件合并，-n按数值大小排序， -o输出， -r 反序，-u忽略相同行，-t 指定栏位分隔符，-k 指定需要排序的栏位] 栏位是列，用: 或 “ ”分隔")]),s._v(" "),a("li",[s._v("uniq")]),s._v(" "),a("li",[s._v("cut filenames [-f 1/2,3指定显示的列, --complement 取反, -d 指定分隔符，-b字节，-c字符，-f定义字段 {N-, N-M,-M}范围]")]),s._v(" "),a("li",[s._v("past 多个文件按列进行合并 -d 间隔符")]),s._v(" "),a("li",[s._v("tr 对字符进行替换、压缩、删除 [-c 取代，-d 删除，-s 连续重复的字符以单个字符表示，-t] 如大写转成小写 '[:upper:]' '[:lower:]' 或 'A-Z0-9' 'a-z0-9'")]),s._v(" "),a("li",[s._v("awk 对文本和数据进行处理，是强大的编译工具，更多作为脚本来使用 [-F 指定分隔符, -v 设定用户亦是, -f 从脚本中读取awk命令, -f val设置内在限制]")])]),s._v(" "),a("ul",[a("li",[s._v("模式：正则、关系表达式、模式匹配表达式~和!~、begin, pattern, end")]),s._v(" "),a("li",[s._v("操作：变量或数组、输出命令、内置函数、控制流语句")]),s._v(" "),a("li",[s._v("内置变量：-v 将外部变量传递给awk\n$n 当前记录的第n个字段，比如n为1表示第一个字段，n为2表示第二个字段。\n$0 这个变量包含执行过程中当前行的文本内容。\n[N] argc 命令行"),a("code",[s._v("参数的数目")]),s._v("。\n[G] argind 命令行中当前"),a("code",[s._v("文件的位置")]),s._v("（从0开始算）。\n[N] argv 包含命令行"),a("code",[s._v("参数的数组")]),s._v("。\n[G] convfmt 数字转换格式（默认值为%.6g）。\n[P] environ 环境变量关联数组。\n[N] errno 最后一个"),a("code",[s._v("系统错误的描述")]),s._v("。\n[G] fieldWidths "),a("code",[s._v("字段宽度")]),s._v("列表（用空格键分隔）。\n[A] filename 当前输入"),a("code",[s._v("文件的名")]),s._v("。\n[P] FNR 同NR，但相对于当前文件。\n[A] FS 字段"),a("code",[s._v("分隔符")]),s._v("（默认是任何空格）。\n[G] ignoreCase 如果为真，则进行"),a("code",[s._v("忽略大小写")]),s._v("的匹配。\n[A] NF 表示字段数，在执行过程中对应于当前的"),a("code",[s._v("字段数")]),s._v("。\n[A] NR 表示记录数，在执行过程中对应于当前的"),a("code",[s._v("行号")]),s._v("。\n[A] OFMT 数字的"),a("code",[s._v("输出格式")]),s._v("（默认值是%.6g）。\n[A] OFS 输出"),a("code",[s._v("字段分隔符")]),s._v("（默认值是一个空格）。\n[A] ORS 输出"),a("code",[s._v("记录分隔符")]),s._v("（默认值是一个换行符）。\n[A] RS "),a("code",[s._v("记录分隔符")]),s._v("（默认是一个换行符）。\n[N] rStart 由match函数所匹配的字符串的"),a("code",[s._v("第一个位置")]),s._v("。\n[N] rLength 由match函数所匹配的字符串的"),a("code",[s._v("长度")]),s._v("。\n[N] subSep "),a("code",[s._v("数组下标分隔符")]),s._v("（默认值是34）。\n[:alnum:]：字母和数字\n[:alpha:]：字母\n[:cntrl:]：控制（非打印）字符\n[:digit:]：数字\n[:graph:]：图形字符\n[:lower:]：小写字母\n[:print:]：可打印字符\n[:punct:]：标点符号\n[:space:]：空白字符\n[:upper:]：大写字母\n[:xdigit:]：十六进制字符")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 从文件或标准输入读取一行，然后执行pattern语句块，它逐行扫描文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## begin与end语句块可选，parttern也是可选，没有则默认执行print，打印每一个读取到的行")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## print中的双引号被当作拼接符使用的")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"BEGIN {} pattern{} END{}"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("VAR")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10000")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" -v "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("VARIABLE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$VAR")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{ print VARIABLE }'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 或")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("var1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"aaa"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("var2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bbb"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{ print v1,v2 }'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("v1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$var1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("v2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$var2")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" -nrk "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.2")]),s._v(" -t: sort.txt "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第一栏位的第二个字符开始到最后一个字符为止 1.2,1.2只对第二个字符进行排序")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("paste")]),s._v(" employee.txt bonus.txt "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $1,$2,$3,$5}'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tr")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'A-Z'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a-z'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sort")]),s._v(" -k "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("h2",{attrs:{id:"执行表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行表达式"}},[s._v("#")]),s._v(" 执行表达式")]),s._v(" "),a("ol",[a("li",[s._v('expr [length/substr/index/quote] "" [2 5/e] 或者数学表达式')])]),s._v(" "),a("h2",{attrs:{id:"查看文本内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看文本内容"}},[s._v("#")]),s._v(" 查看文本内容")]),s._v(" "),a("ol",[a("li",[s._v("cat -E结尾显示为$，-n行号，-v列出看不出来的特殊符号，-b空白行没有编号，-s遇到两个空白行时换为一个")]),s._v(" "),a("li",[s._v("more, less")]),s._v(" "),a("li",[s._v("head, tail")])]),s._v(" "),a("h2",{attrs:{id:"权限与所属"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#权限与所属"}},[s._v("#")]),s._v(" 权限与所属")]),s._v(" "),a("ol",[a("li",[s._v("umask 预设权限")]),s._v(" "),a("li",[s._v("chmod 更新权限")]),s._v(" "),a("li",[s._v("chown 将权限赋给")]),s._v(" "),a("li",[s._v("chgrp 变更所属群组")])]),s._v(" "),a("h2",{attrs:{id:"查找"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查找"}},[s._v("#")]),s._v(" 查找")]),s._v(" "),a("ol",[a("li",[s._v("which cmd")]),s._v(" "),a("li",[s._v("whereis 数据库寻找特定档案")]),s._v(" "),a("li",[s._v("locate，使用之前先用updatedb更新数据库")]),s._v(" "),a("li",[s._v("find 时间：mtime +n/-n/n 几天之前，几天之内，n天之间一天内被修改的文件/newer file 比file更新的；权限、名称、属性：-perm mode/-mode全部包括/+mode包含任一 -size, -type, -name")]),s._v(" "),a("li",[s._v("grep [-c 统计查找字符的个数, -a binary以text文件白方式查找 -v 反向选择] [显示范围 -a 之后, -b 之前, -c前后] [-e 范本 -f范本文件 -l -L指定符合或不符合范本的文件名称] [-h -H是否标示该列所属的文件名称] [-r 递归] [-d查找的为目录] 范本 filenames")]),s._v(" "),a("li",[s._v("xargs 给其他命令传递参数的一个过滤器，是组合多个命令折一个工具，擅长将标准输入转换成命令行参数，能够处理管道或stdin并将其转换成特定命令的命令参数，也可将单行或多行输入转换成其他格式 [-n 3多行输出，-d自定义定界符，-I替换字符]")]),s._v(" "),a("li",[s._v("sed")])]),s._v(" "),a("h2",{attrs:{id:"进程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进程"}},[s._v("#")]),s._v(" 进程")]),s._v(" "),a("ol",[a("li",[s._v("ps")]),s._v(" "),a("li",[s._v("kill")]),s._v(" "),a("li",[s._v("reboot")]),s._v(" "),a("li",[s._v("init 0 关机")]),s._v(" "),a("li",[s._v("init 6 重启")]),s._v(" "),a("li",[s._v("killall -i 交互；-e command name；-I 忽略大小写")])]),s._v(" "),a("ul",[a("li",[s._v("1：SIGHUP，启动被终止的进程")]),s._v(" "),a("li",[s._v("2：SIGINT，相当于输入ctrl+c，中断一个程序的进行")]),s._v(" "),a("li",[s._v("9：SIGKILL，强制中断一个进程的进行")]),s._v(" "),a("li",[s._v("15：SIGTERM，以正常的结束进程方式来终止进程")]),s._v(" "),a("li",[s._v("17：SIGSTOP，相当于输入ctrl+z，暂停一个进程的进行")])]),s._v(" "),a("h2",{attrs:{id:"系统"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#系统"}},[s._v("#")]),s._v(" 系统")]),s._v(" "),a("ol",[a("li",[s._v("dmesg 系统信息")]),s._v(" "),a("li",[s._v("df 硬盘空间")]),s._v(" "),a("li",[s._v("du 目录与子目录的硬盘空间")]),s._v(" "),a("li",[s._v("free 内存占用情况")]),s._v(" "),a("li",[s._v("top 动态查看系统内存、cpu、进程")]),s._v(" "),a("li",[s._v("hostname")]),s._v(" "),a("li",[s._v("type 指令的来源")]),s._v(" "),a("li",[s._v("shutdown [-r 重启 -h服务停滞后立即关机 -f快速重启] when [时间hh:mm 或 +m分钟后执行 now]")]),s._v(" "),a("li",[s._v("fdisk 所有存储设备")]),s._v(" "),a("li",[s._v("mount 挂载, umount 卸载")]),s._v(" "),a("li",[s._v("eject 弹出光盘")]),s._v(" "),a("li",[s._v("at [5pm + 3 days] [命令] 特定的时间执行某个程序或指令; 时间：15:30, 2 weeks, tomorrow")]),s._v(" "),a("li",[s._v("crontab 让使用者在固定时间或时间间隔执行程式")]),s._v(" "),a("li",[s._v("sleep")]),s._v(" "),a("li",[s._v("last 登录者信息")]),s._v(" "),a("li",[s._v("write user 传信息给其他使用者")]),s._v(" "),a("li",[s._v("uptime 现在时间、系统已运行时间、目前登录用户数、系统在过去1、5、15分钟内的平均负载")])]),s._v(" "),a("h2",{attrs:{id:"打包与解压"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#打包与解压"}},[s._v("#")]),s._v(" 打包与解压")]),s._v(" "),a("ol",[a("li",[s._v("gzip 压缩")]),s._v(" "),a("li",[s._v("gunzip 解压")]),s._v(" "),a("li",[s._v("tar 压缩zcvf与解压zxvf -C 指定压缩或解压的目录；-x 打包或解压的功能；-j 通过bzip2；-z 通过gzip；-t 查看打包包含哪些文件；-c 新建打包文件；-v 过程")])]),s._v(" "),a("h2",{attrs:{id:"日历与时间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#日历与时间"}},[s._v("#")]),s._v(" 日历与时间")]),s._v(" "),a("ol",[a("li",[s._v("cal")]),s._v(" "),a("li",[s._v("time")]),s._v(" "),a("li",[s._v("date +%m%d%y")])]),s._v(" "),a("h2",{attrs:{id:"计算数字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计算数字"}},[s._v("#")]),s._v(" 计算数字")]),s._v(" "),a("ol",[a("li",[s._v("wc")]),s._v(" "),a("li",[s._v("cut")]),s._v(" "),a("li",[s._v("paste")]),s._v(" "),a("li",[s._v("tr")]),s._v(" "),a("li",[s._v("sort, uniq, join, diff, patch")])]),s._v(" "),a("h2",{attrs:{id:"变量设定"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量设定"}},[s._v("#")]),s._v(" 变量设定")]),s._v(" "),a("ol",[a("li",[s._v("my=v, echo $my")]),s._v(" "),a("li",[s._v("unset my")])])])}],!1,null,null,null);t.default=n.exports}}]);