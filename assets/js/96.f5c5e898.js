(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{269:function(e,v,_){"use strict";_.r(v);var l=_(0),i=Object(l.a)({},(function(){var e=this.$createElement;this._self._c;return this._m(0)}),[function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("div",{staticClass:"content"},[_("h3",{attrs:{id:"导读："}},[_("a",{staticClass:"header-anchor",attrs:{href:"#导读："}},[e._v("#")]),e._v(" 导读：")]),e._v(" "),_("ul",[_("li",[_("p",[_("code",[e._v("query")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("queryStream")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("document")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("aggregate")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("model")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("promise")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("utils")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("browser")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("virtualtype")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("collection")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("schematype")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("types")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("schema")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("coursor")]),e._v("--QueryCursor, AggregentionCursor")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("collection")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("error")])])])]),e._v(" "),_("h3",{attrs:{id:"query-options-model-conditions-collection"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#query-options-model-conditions-collection"}},[e._v("#")]),e._v(" Query([options], [model], [conditions], [collection]),")]),e._v(" "),_("h3",{attrs:{id:"query相关查找操作符"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#query相关查找操作符"}},[e._v("#")]),e._v(" query相关查找操作符")]),e._v(" "),_("h5",{attrs:{id:"比较"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#比较"}},[e._v("#")]),e._v(" 比较")]),e._v(" "),_("ul",[_("li",[e._v("$eq,")]),e._v(" "),_("li",[e._v("$gt,")]),e._v(" "),_("li",[e._v("$gte,")]),e._v(" "),_("li",[e._v("$in,    在数组当中")]),e._v(" "),_("li",[e._v("$nin,   不在数组当中")]),e._v(" "),_("li",[e._v("$lt,")]),e._v(" "),_("li",[e._v("$lte,")]),e._v(" "),_("li",[e._v("$ne,")])]),e._v(" "),_("h5",{attrs:{id:"逻辑操作"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#逻辑操作"}},[e._v("#")]),e._v(" 逻辑操作")]),e._v(" "),_("ul",[_("li",[e._v("$and,")]),e._v(" "),_("li",[e._v("$not,")]),e._v(" "),_("li",[e._v("$nor,   文档中所有失败的匹配？？？？")]),e._v(" "),_("li",[e._v("$or,")])]),e._v(" "),_("h5",{attrs:{id:"元素"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#元素"}},[e._v("#")]),e._v(" 元素")]),e._v(" "),_("ul",[_("li",[e._v("$exists,")]),e._v(" "),_("li",[e._v("$type,  使用：{$text: {$seatch: , $language: , $caseSensitive: true, $diacriticSensitive: true}}")])]),e._v(" "),_("h5",{attrs:{id:"表达式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#表达式"}},[e._v("#")]),e._v(" 表达式")]),e._v(" "),_("ul",[_("li",[e._v("$expr,      使用aggregate表达式")]),e._v(" "),_("li",[e._v("$jsonSchema,  有很多查找属性，验证不匹配的JSON Schema")]),e._v(" "),_("li",[e._v("$mod,   {$mod: [4, 0]}  除4求余为0")]),e._v(" "),_("li",[e._v("$regex,")]),e._v(" "),_("li",[e._v("$text,     文本查找{$search, $language, $caseSensitive, $diacriticSensitive}")]),e._v(" "),_("li",[e._v("$where,")])]),e._v(" "),_("h5",{attrs:{id:"地理位置"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#地理位置"}},[e._v("#")]),e._v(" 地理位置")]),e._v(" "),_("ul",[_("li",[e._v("$geoIntersects,")]),e._v(" "),_("li",[e._v("$geoWithin,")]),e._v(" "),_("li",[e._v("$near,")]),e._v(" "),_("li",[e._v("$near,")]),e._v(" "),_("li",[e._v("$nearSphere,")])]),e._v(" "),_("h5",{attrs:{id:"数组"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[e._v("#")]),e._v(" 数组")]),e._v(" "),_("ul",[_("li",[e._v("$all,    匹配数组包含所有元素")]),e._v(" "),_("li",[e._v("$elemMatch,")]),e._v(" "),_("li",[e._v("$size,  取数组中的一个项，下标，  返回长度为2的数组")])]),e._v(" "),_("h5",{attrs:{id:"字节"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#字节"}},[e._v("#")]),e._v(" 字节")]),e._v(" "),_("ul",[_("li",[e._v("$bitsAllClear,")]),e._v(" "),_("li",[e._v("$bitsAllSet,")]),e._v(" "),_("li",[e._v("$bitsAnySet,")])]),e._v(" "),_("h5",{attrs:{id:"注释"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#注释"}},[e._v("#")]),e._v(" 注释")]),e._v(" "),_("ul",[_("li",[e._v("$comment,")])]),e._v(" "),_("h5",{attrs:{id:"project操作"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#project操作"}},[e._v("#")]),e._v(" Project操作")]),e._v(" "),_("ul",[_("li",[e._v("$,   数组中匹配的第一个元素")]),e._v(" "),_("li",[e._v("$elemMatch,   数组中的字段")]),e._v(" "),_("li",[e._v("$meta,")]),e._v(" "),_("li",[e._v("$slice   5, -5, [-10, 5]  限制返回数组长度")])]),e._v(" "),_("h2",{attrs:{id:"更新数据"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#更新数据"}},[e._v("#")]),e._v(" 更新数据")]),e._v(" "),_("ul",[_("li",[e._v("$set")])]),e._v(" "),_("h2",{attrs:{id:"处理查找条件"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#处理查找条件"}},[e._v("#")]),e._v(" 处理查找条件")]),e._v(" "),_("ul",[_("li",[e._v("$where(fn) / query.where('field', 'value').gt(21)")]),e._v(" "),_("li",[e._v("$regex / query.regex(field, reg) / where().regex(reg)")]),e._v(" "),_("li",[e._v("query.or(array)")]),e._v(" "),_("li",[e._v("query.nor(array)")]),e._v(" "),_("li",[e._v("gt, lt, gte, lte----{field: {$gt: 21}}")])]),e._v(" "),_("h2",{attrs:{id:"筛选查找结果"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#筛选查找结果"}},[e._v("#")]),e._v(" 筛选查找结果")]),e._v(" "),_("ul",[_("li",[_("p",[e._v(".equals(val)")])]),e._v(" "),_("li",[_("p",[e._v("$ne")])]),e._v(" "),_("li",[_("p",[e._v("read()")])]),e._v(" "),_("li",[_("p",[e._v("slaveOk()")])])]),e._v(" "),_("h2",{attrs:{id:"查找结果处理document"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#查找结果处理document"}},[e._v("#")]),e._v(" 查找结果处理Document")]),e._v(" "),_("h2",{attrs:{id:"常用"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#常用"}},[e._v("#")]),e._v(" 常用")]),e._v(" "),_("ul",[_("li",[e._v("skip")]),e._v(" "),_("li",[e._v("limit")]),e._v(" "),_("li",[e._v("sort('field -field1'), ({field: 'asc', field: -1/1})")]),e._v(" "),_("li",[e._v("stream().pipe(res) 流  stream的事件data, error, close")]),e._v(" "),_("li",[e._v("match {$match: {cond: val}}")])]),e._v(" "),_("h3",{attrs:{id:"更新数据-更新或创建字段并更新值-update方法中使用的"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#更新数据-更新或创建字段并更新值-update方法中使用的"}},[e._v("#")]),e._v(" 更新数据 (更新或创建字段并更新值) update方法中使用的")]),e._v(" "),_("ul",[_("li",[e._v('$set 用特殊值替换字段值，或创建一个新字段, {$set: {整条数据}}  或 {$set: {"field.sub": val}}  数组：{$set: {"arr.1": val}}')]),e._v(" "),_("li",[_("code",[e._v('$currentDate 设置一个字段以当前时间 或 时间戳 {$currentDate: {field: true / {$types: "timestamp"/"date"}}}')])]),e._v(" "),_("li",[e._v("$inc 递增或递减 {$inc: {field: -2, field: 1}}")]),e._v(" "),_("li",[e._v("$min  与现有数据比较，更新的数据如果小，则替换现有数据，操作日期比较好用。")]),e._v(" "),_("li",[e._v("$max")]),e._v(" "),_("li",[e._v("$mul   更新或创建值为0, 与现有值相乘的结果,  相乘\n"),_("ul",[_("li",[e._v("NumberLong(0), NumberInt(0)")])])]),e._v(" "),_("li",[e._v("$rename  换一个名字，类似于执行了$unset 与 $set")]),e._v(" "),_("li",[e._v("$setOnInsert  插入新数据起作用，更新不起作用， upsert:true")]),e._v(" "),_("li",[e._v('$unset   {$unset: {field: ""}}')])]),e._v(" "),_("h3",{attrs:{id:"更新数组"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#更新数组"}},[e._v("#")]),e._v(" 更新数组")]),e._v(" "),_("ul",[_("li",[_("p",[e._v('$  标识一个数组中的对象属性更新 修改第一个匹配的项 "field.$" ？ {$set: {"field.$.field": val}}, 与查找语句$elemMatch相似, 多个属性时用h$elemMatch')])]),e._v(" "),_("li",[_("p",[e._v('{$set: {field.$[]: val}} 更新数组所有元素值为val, 必须超过一个且为内嵌数组\n{$inc: {"field.$[]": 10}}  field的数组元素为简单类型，都增加10')])]),e._v(" "),_("li",[_("p",[e._v('{$set: {field.$[+<identifier>]: value}, {arrayFilters: [+<identifier>:+<condition>]}} 更新内嵌型数组\n{$inc: { "field.$[].sub.$[var]": val}}, {arrayFilters: [{"var": {$equal: 10}}], multi: true}  var表示sub的所有值\n{$set: {"field.$[var]": val}, {...}  }\n{$set: {"field.$[var].sub": val}, {arrayFilters: [{ "var.sub1" : +<condition> }]}  }')])]),e._v(" "),_("li",[_("p",[e._v("$addToSet  向数组添加一个数据，除非数据已存在,  {$addToSet: {field: [val, val]}} 向字段添加了一个数组")])]),e._v(" "),_("li",[_("p",[e._v("$each 循环添加  {$addToSet: {$each: [val, val, val]}} 其中有某个项为与数据库数据相同，只加不存在的数据  "),_("code",[e._v("单表达式")])])]),e._v(" "),_("li",[_("p",[e._v("$pop  移除第一个-1或最后一个1")])]),e._v(" "),_("li",[_("p",[e._v("$pull  移除数组中一个值或符合条件的所有值  {$pull: {field: {$in: []}, field: val}}   因为已经是访问每个项了，故不用$elemMatch作为每件，更复杂的数据可以用")])]),e._v(" "),_("li",[_("p",[e._v("$pullAll  移除所有匹配的数组项  {$pullAll: [list]}")])]),e._v(" "),_("li",[_("p",[e._v("$push   字段不是数组，失败，如果值是一个数组，将作为数组的一个元素追加到整个数组，可以与$each一起追加多项")])]),e._v(" "),_("li",[_("p",[e._v("$position 指定数组下标 {$push: {field: {$each: [],  $position: 3} }} -1代表last之前, 如果大于或等于数组长度, 从数组开始处,  与$each结合使用")])]),e._v(" "),_("li",[_("p",[e._v("$slice  修改时必须与$each结合使用, 0 正 负 值")])]),e._v(" "),_("li",[_("p",[e._v("$sort 1 / -1  修改时必须与$each结合使用, 修改元素，但不是文档   {$push: {field: {$each: [], $sort: {sub: -1}, $slice: 3 }} 根据sub修改field的排序, 只保留前三项元素\n}")])]),e._v(" "),_("li",[_("p",[e._v("$bit  位运算 {$bit: {field: {and: 5}}}")])])]),e._v(" "),_("p",[_("code",[e._v("project, a read operation")])]),e._v(" "),_("h3",{attrs:{id:"query-与-write常用方法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#query-与-write常用方法"}},[e._v("#")]),e._v(" Query 与 write常用方法")]),e._v(" "),_("ul",[_("li",[e._v("findAndModify({query, sort, remove, update, new, fields, upsert .....})")]),e._v(" "),_("li",[e._v("eval")]),e._v(" "),_("li",[e._v("deletes")]),e._v(" "),_("li",[e._v("insert")]),e._v(" "),_("li",[e._v("update")]),e._v(" "),_("li",[e._v("getMore")]),e._v(" "),_("li",[e._v("getLastError, getPrevError, resetError")])]),e._v(" "),_("h4",{attrs:{id:"查询修改"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#查询修改"}},[e._v("#")]),e._v(" 查询修改")]),e._v(" "),_("ul",[_("li",[_("p",[e._v("$comment,")])]),e._v(" "),_("li",[_("p",[e._v("$explain,")])]),e._v(" "),_("li",[_("p",[e._v("$hint,")])]),e._v(" "),_("li",[_("p",[e._v("$maxScan,")])]),e._v(" "),_("li",[_("p",[e._v("$max,")])]),e._v(" "),_("li",[_("p",[e._v("$maxTimeMS,")])]),e._v(" "),_("li",[_("p",[e._v("$min,")])]),e._v(" "),_("li",[_("p",[e._v("$orderby,")])]),e._v(" "),_("li",[_("p",[e._v("$query,")])]),e._v(" "),_("li",[_("p",[e._v("$returnKey,")])]),e._v(" "),_("li",[_("p",[e._v("$showDiskLoc,")])]),e._v(" "),_("li",[_("p",[e._v("$natural,")])]),e._v(" "),_("li",[_("p",[e._v("Query#read(pref, [tags]),")])]),e._v(" "),_("li",[_("p",[e._v("Query#regex([path], val),")])]),e._v(" "),_("li",[_("p",[e._v("Query#remove([filter], [callback]),")])]),e._v(" "),_("li",[_("p",[e._v("Query#replaceOne([criteria], [doc], [options], [callback]),")])]),e._v(" "),_("li",[_("p",[e._v("Query#select(arg),")])]),e._v(" "),_("li",[_("p",[e._v("Query#selected(),")])]),e._v(" "),_("li",[_("p",[e._v("Query#selectedExclusively(),")])]),e._v(" "),_("li",[_("p",[e._v("Query#selectedInclusively(),")])]),e._v(" "),_("li",[_("p",[e._v("Query#setOptions(options),")])]),e._v(" "),_("li",[_("p",[e._v("Query#size([path], val),")])]),e._v(" "),_("li",[_("p",[e._v("Query#skip(val),")])]),e._v(" "),_("li",[_("p",[e._v("Query#slaveOk(v),")])]),e._v(" "),_("li",[_("p",[e._v("Query#slice([path], val),")])]),e._v(" "),_("li",[_("p",[e._v("Query#slice([path], [val]),")])]),e._v(" "),_("li",[_("p",[e._v("Query#snapshot(),")])]),e._v(" "),_("li",[_("p",[e._v("Query#sort(arg),")])]),e._v(" "),_("li",[_("p",[e._v("Query#stream([options]),")])]),e._v(" "),_("li",[_("p",[e._v("Query#tailable(bool, [opts], [opts.numberOfRetries], [opts.tailableRetryInterval]),")])]),e._v(" "),_("li",[_("p",[e._v("Query#then([resolve], [reject]),")])]),e._v(" "),_("li",[_("p",[e._v("Query#toConstructor(),")])]),e._v(" "),_("li",[_("p",[e._v("Query#update([criteria], [doc], [options], [options.multipleCastError], [callback]),")])]),e._v(" "),_("li",[_("p",[e._v("__Query#updateMany([criteria], [doc], [options], [callback]),")])]),e._v(" "),_("li",[_("p",[e._v("Query#updateOne([criteria], [doc], [options], [callback]),")])]),e._v(" "),_("li",[_("p",[e._v("Query#within(),")])]),e._v(" "),_("li",[_("p",[e._v("Query._ensurePath(method),")])]),e._v(" "),_("li",[_("p",[e._v("Query._fieldsForExec(),")])]),e._v(" "),_("li",[_("p",[e._v("Query._updateForExec(),")])]),e._v(" "),_("li",[_("p",[e._v("Query#use$geoWithin,")])])]),e._v(" "),_("h2",{attrs:{id:"处理文档"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#处理文档"}},[e._v("#")]),e._v(" 处理文档")]),e._v(" "),_("ul",[_("li",[_("p",[e._v("remove(query,{\njustOne: +<boolean>,\nwriteConcern: +<document>,\ncollation: +<document>\n}, cb)")])]),e._v(" "),_("li",[_("p",[e._v("Model.update(conditions, doc, [optiions], cb)")])]),e._v(" "),_("li",[_("p",[e._v("update(query, update, options) ******")])]),e._v(" "),_("li",[_("p",[e._v("updateMany")])]),e._v(" "),_("li",[_("p",[e._v("updateOne")])]),e._v(" "),_("li",[_("p",[e._v("Query#_applyPaths(),")])]),e._v(" "),_("li",[_("p",[e._v("Query#_castFields(fields),")])]),e._v(" "),_("li",[_("p",[e._v("Query#_count([callback]),")])]),e._v(" "),_("li",[_("p",[e._v("Query#_find([callback]),")])]),e._v(" "),_("li",[_("p",[e._v("Query#_findOne([callback]),")])]),e._v(" "),_("li",[_("p",[e._v("Query#_optionsForExec(model),")])]),e._v(" "),_("li",[_("p",[e._v("Query#$where(js),")])]),e._v(" "),_("li",[_("p",[e._v("Query#all([path], val),   "),_("code",[e._v('{field: {$all: []}}更新 更新一条数组数据 或 多条数据, {"field.sub":{$all: [val]}}')])])]),e._v(" "),_("li",[_("p",[e._v("Query#and(array),     "),_("code",[e._v("{$and: [{field: val}, {field: val}]}")])])]),e._v(" "),_("li",[_("p",[e._v("Query#batchSize(val),")])]),e._v(" "),_("li",[_("p",[e._v("Query#box(val, Upper),")])]),e._v(" "),_("li",[_("p",[e._v("Query#canMerge(conds),")])]),e._v(" "),_("li",[_("p",[e._v("Query#cast(model, [obj]),")])]),e._v(" "),_("li",[_("p",[e._v("Query#catch([reject]),")])]),e._v(" "),_("li",[_("p",[e._v("Query#center(),")])]),e._v(" "),_("li",[_("p",[e._v("Query#centerSphere([path], val),")])]),e._v(" "),_("li",[_("p",[e._v("Query#circle([path], area),")])]),e._v(" "),_("li",[_("p",[e._v("Query#collation(value),")])]),e._v(" "),_("li",[_("p",[e._v("Query#comment(val),")])]),e._v(" "),_("li",[_("p",[e._v("Query#count([criteria], [callback]),")])]),e._v(" "),_("li",[_("p",[e._v("Query#cursor([options]),")])]),e._v(" "),_("li",[_("p",[e._v("Query#deleteMany([filter], [callback]),")])]),e._v(" "),_("li",[_("p",[e._v("Query#deleteOne([filter], [callback]),")])]),e._v(" "),_("li",[_("p",[e._v("Query#distinct([field], [criteria], [callback]),")])]),e._v(" "),_("li",[_("p",[e._v("Query#elemMatch(path, criteria),   "),_("code",[e._v("数组里有对象元素的匹配，与all一起使用 field{$all: [{$elemMath: {subField: v}}]}")])])]),e._v(" "),_("li",[_("p",[e._v("Query#equals(val),")])]),e._v(" "),_("li",[_("p",[e._v("Query#error(err),")])]),e._v(" "),_("li",[_("p",[e._v("Query#exec([operation], [callback]),")])]),e._v(" "),_("li",[_("p",[e._v("Query#exists([path], val),        "),_("code",[e._v("单表达式")])])]),e._v(" "),_("li",[_("p",[e._v("Query#find([filter], [callback]),")])]),e._v(" "),_("li",[_("p",[e._v("Query#findOne([filter], [projection], [options], [callback]),")])]),e._v(" "),_("li",[_("p",[e._v("Query#findOneAndRemove([conditions], [options], [options.passRawResult], [options.strict], [callback]),")])]),e._v(" "),_("li",[_("p",[e._v("Query#findOneAndUpdate([query], [doc], [options], [options.passRawResult], [options.strict], [options.multipleCastError], [callback]),")])]),e._v(" "),_("li",[_("p",[e._v("Query#geometry(object),")])]),e._v(" "),_("li",[_("p",[e._v("Query#getQuery(),")])]),e._v(" "),_("li",[_("p",[e._v("Query#getUpdate(),")])]),e._v(" "),_("li",[_("p",[e._v("Query#gt([path], val),     "),_("code",[e._v("单表达式")])])]),e._v(" "),_("li",[_("p",[e._v("Query#gte([path], val),     "),_("code",[e._v("单表达式")])])]),e._v(" "),_("li",[_("p",[e._v("Query#hint(val),")])]),e._v(" "),_("li",[_("p",[e._v("Query#in([path], val),     "),_("code",[e._v("单表达式")])])]),e._v(" "),_("li",[_("p",[e._v("Query#intersects([arg]),")])]),e._v(" "),_("li",[_("p",[e._v("Query#lean(bool),")])]),e._v(" "),_("li",[_("p",[e._v("Query#limit(val),")])]),e._v(" "),_("li",[_("p",[e._v("Query#lt([path], val),     "),_("code",[e._v("单表达式")])])]),e._v(" "),_("li",[_("p",[e._v("Query#lte([path], val),     "),_("code",[e._v("单表达式")])])]),e._v(" "),_("li",[_("p",[e._v("Query#maxDistance([path], val),")])]),e._v(" "),_("li",[_("p",[e._v("Query#maxscan(),")])]),e._v(" "),_("li",[_("p",[e._v("Query#maxScan(val),")])]),e._v(" "),_("li",[_("p",[e._v("Query#merge(source),")])]),e._v(" "),_("li",[_("p",[e._v("Query#merge(source),")])]),e._v(" "),_("li",[_("p",[e._v("Query#mod([path], val),")])]),e._v(" "),_("li",[_("p",[e._v("Query#mongooseOptions(options),")])]),e._v(" "),_("li",[_("p",[e._v("Query#ne([path], val),    "),_("code",[e._v("单表达式")]),e._v(" "),_("code",[e._v("与equal相反, 可以与$数组操作结合")])])]),e._v(" "),_("li",[_("p",[e._v("Query#near([path], val),")])]),e._v(" "),_("li",[_("p",[e._v("Query#nearSphere(),")])]),e._v(" "),_("li",[_("p",[e._v("Query#nin([path], val),   "),_("code",[e._v("与in相反, 可以与$数组操作结合")])])]),e._v(" "),_("li",[_("p",[e._v("Query#nor(array),    "),_("code",[e._v("与$and用法相同, 结合使用 $and: [ $or: [{}], $or: [{}] ]")])])]),e._v(" "),_("li",[_("p",[e._v("Query#or(array),")])]),e._v(" "),_("li",[_("p",[e._v("Query#polygon([path], [coordinatePairs...]),")])]),e._v(" "),_("li",[_("p",[e._v("Query#populate(path, [select], [model], [match], [options]),")])]),e._v(" "),_("li",[_("p",[e._v("$not      "),_("code",[e._v("可以与$数组操作结合")])])]),e._v(" "),_("li",[_("p",[e._v("within({field: [], field: val})  ({field: [ [],  []   ]})  或  （[], [], []）")])]),e._v(" "),_("li",[_("p",[e._v("geoWithin")])])]),e._v(" "),_("h2",{attrs:{id:"由stream-方法返回querystream的方法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#由stream-方法返回querystream的方法"}},[e._v("#")]),e._v(" 由stream()方法返回QueryStream的方法")]),e._v(" "),_("ul",[_("li",[e._v("destory(err)")]),e._v(" "),_("li",[e._v("pause()")]),e._v(" "),_("li",[e._v("pipe()")]),e._v(" "),_("li",[e._v("resume()")]),e._v(" "),_("li",[e._v("paused()")]),e._v(" "),_("li",[e._v("readable()")])]),e._v(" "),_("h2",{attrs:{id:"model"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#model"}},[e._v("#")]),e._v(" Model")]),e._v(" "),_("ul",[_("li",[e._v("$where  where")]),e._v(" "),_("li",[e._v("cb中的doc.increment(), save()")]),e._v(" "),_("li",[e._v("model() 其他Model实例")]),e._v(" "),_("li",[e._v("remove()")]),e._v(" "),_("li",[e._v("save()")]),e._v(" "),_("li",[e._v("aggregate()")]),e._v(" "),_("li",[e._v("bulkWrite()")]),e._v(" "),_("li",[e._v("count()")]),e._v(" "),_("li",[e._v("create()")]),e._v(" "),_("li",[e._v("createIndex()")]),e._v(" "),_("li",[e._v("deleteMany()")]),e._v(" "),_("li",[e._v("deleteOne()")]),e._v(" "),_("li",[e._v("discriminator()")]),e._v(" "),_("li",[e._v("ensureIndexes()")]),e._v(" "),_("li",[e._v("find()")]),e._v(" "),_("li",[e._v("findOne()")]),e._v(" "),_("li",[e._v("findById()")]),e._v(" "),_("li",[e._v("findByIdAndRemove()")]),e._v(" "),_("li",[e._v("findOneAndRemove()")]),e._v(" "),_("li",[e._v("findByIdAndUpdate()")]),e._v(" "),_("li",[e._v("findOneAndUpdate()")]),e._v(" "),_("li",[e._v("distinct()")]),e._v(" "),_("li",[e._v("geoNear()")]),e._v(" "),_("li",[e._v("geoSearch()")]),e._v(" "),_("li",[e._v("hydrate()")]),e._v(" "),_("li",[e._v("init()")]),e._v(" "),_("li",[e._v("insertMany()")]),e._v(" "),_("li",[e._v("mapReduce()")]),e._v(" "),_("li",[e._v("populate()")]),e._v(" "),_("li",[e._v("remove()")]),e._v(" "),_("li",[e._v("replaceOne()")]),e._v(" "),_("li",[e._v("translateAliases()")]),e._v(" "),_("li",[e._v("update()")]),e._v(" "),_("li",[e._v("updateMany()")]),e._v(" "),_("li",[e._v("updateOne()")])])])}],!1,null,null,null);v.default=i.exports}}]);