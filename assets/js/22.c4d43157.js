(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{138:function(t,s,a){"use strict";a.r(s);var n=a(0),o=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"使用vscode进行node调试"}},[t._v("使用vscode进行node调试")]),a("ul",[a("li",[t._v("vscode内置的nodejs调试喝咖啡是通过"),a("code",[t._v("wire protocols")]),t._v("与"),a("code",[t._v("Nodejs")]),t._v("运行环境进行通信的，所支持的"),a("code",[t._v("wire protocols")]),t._v("是在运行时确定的。\n"),a("ul",[a("li",[t._v("现在有两种wire protocols存在")])]),a("ol",[a("li",[t._v("legacy, 原来的V8调试协议，可能在Nodejs v8.X中丢弃")]),a("li",[t._v("inspector, 新的V8检查协议")])])]),a("li",[t._v("启动配置属性，启动类型为launch和attach(关联到一个已经运行的程序)中\n"),a("ul",[a("li",[t._v("protocol:使用的调试协议")]),a("li",[t._v("port:使用的调试端口")]),a("li",[t._v("address:使用的调试TCP / IP地址")]),a("li",[t._v("restart:终止时重新启动会话(restart session on termination)")]),a("li",[t._v("timeout:重新启动会话时，在这个毫秒数之后丢弃")]),a("li",[t._v("stopOnEntry:程序启动时立即中断")]),a("li",[t._v("localRoot:VScode的根目录")]),a("li",[t._v("remoteRoot:Node的根目录")]),a("li",[t._v("sourceMaps:开启source maps设置为true")])])]),a("li",[t._v("只支持在launch中的配置属性\n"),a("ul",[a("li",[t._v("program:程序的绝对路径")]),a("li",[t._v("cwd:启动程序在此目录中进行调试")]),a("li",[t._v("runtimeExecutable:要使用的运行时可执行文件的绝对路径。默认是node,此处还可以指定为其他的可执行文件如：${workspaceRoot}/node_modules/.bin/electron 或者 直接写为 electron npm gulp")])])])]),a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token property"}},[t._v('"version"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"0.2.0"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{attrs:{class:"token property"}},[t._v('"configurations"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[t._v('"type"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"node"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[t._v('"request"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"launch"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[t._v('"name"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"Launch-vai-babel-node"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[t._v('"runtimeExecutable"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"npm"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[t._v('"runtimeArgs"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{attrs:{class:"token string"}},[t._v('"run"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{attrs:{class:"token string"}},[t._v('"debug"')]),t._v("\n      "),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[t._v('"port"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),a("span",{attrs:{class:"token number"}},[t._v("9229")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[t._v('"env"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{attrs:{class:"token property"}},[t._v('"NODE_ENV"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"develop"')]),t._v("\n      "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[t._v('"console"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"internalConsole"')]),t._v("\n\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("h2",{attrs:{id:"属性"}},[t._v("属性")]),a("ul",[a("li",[t._v("type:配置类型")]),a("li",[t._v("request:请求配置类型。可以是“启动(launch)”或“附加(attach)”")]),a("li",[t._v("name:配置名称；在启动配置下拉菜单中显示")]),a("li",[t._v("program:程序的绝对路径。通过查看 package.json 和打开的文件猜测所生成的值。编辑此属性")]),a("li",[t._v("address:待调试进程的 TCP/IP 地址(仅限 Node.js >= 5.0)。默认值为 “localhost”")]),a("li",[t._v("port:调试要附加的端口。默认端口是 5858")])]),a("h2",{attrs:{id:"变量"}},[t._v("变量")]),a("ul",[a("li",[t._v("${workspaceRoot}:VSCode中打开文件夹的路径")]),a("li",[t._v("${workspaceFolder} 当前打开的项目目录")])]),a("h2",{attrs:{id:"其他配置"}},[t._v("其他配置")]),a("ul",[a("li",[t._v("url")]),a("li",[t._v("args")]),a("li",[t._v("outDir 编译后代码生成的目录")])]),a("h2",{attrs:{id:"多个json任务配合"}},[t._v("多个json任务配合")])])}],!1,null,null,null);s.default=o.exports}}]);