(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{63:function(i,t,a){"use strict";a.r(t);var l=a(0),_=Object(l.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var i=this,t=i.$createElement,a=i._self._c||t;return a("div",{staticClass:"content"},[a("h1",{attrs:{id:"位操作"}},[i._v("位操作")]),a("h2",{attrs:{id:"位运算"}},[i._v("位运算")]),a("h3",{attrs:{id:"a-b-按位与"}},[i._v("a & b  按位与")]),a("p",[i._v("每一个比特位，只有两个操作数都为1时才为1，否则为0")]),a("h3",{attrs:{id:"a-b-按位或"}},[i._v("a | b  按位或")]),a("ul",[a("li",[i._v("每一个比特位，至少有一个操作数都为1时就为1，否则为0")])]),a("h3",{attrs:{id:"a-b-按位异或"}},[i._v("a ^ b  按位异或")]),a("ul",[a("li",[i._v("每一个比特位，当两个操作数的比特位 有且只有一个1时就为1，否则为0")])]),a("h3",{attrs:{id:"a"}},[i._v("~ a")]),a("ul",[a("li",[i._v("反转操作数的比特位，即0变成1，1变成0")])]),a("h3",{attrs:{id:"a-b-左移-a情况下：a-2-【进行b次相乘】"}},[i._v("a << b  左移    A情况下：a * 2 【进行b次相乘】")]),a("ul",[a("li",[i._v("将 a 的二进制形式向左移 b (< 32) 比特位，右边用0填充")])]),a("h3",{attrs:{id:"a-b-右移-a情况下：a-2-【进行b次相除】"}},[i._v("a >> b  右移    A情况下：a / 2  【进行b次相除】")]),a("ul",[a("li",[i._v("将 a 的二进制表示向右移 b (< 32) 位，丢弃被移出的位")])]),a("h3",{attrs:{id:"a-b-无符号右移"}},[i._v("a >>> b 无符号右移")]),a("ul",[a("li",[i._v("将 a 的二进制表示向右移 b (< 32) 位，丢弃被移出的位，并使用 0 在左侧填充。")])]),a("h2",{attrs:{id:"规律"}},[i._v("规律")]),a("ul",[a("li",[i._v("(~ 12 + 1)  即此值的负值")]),a("li",[i._v("正值时，最左的比特位是0")]),a("li",[i._v("负值时，最左的比特位是1，即最左边的比特位为符号位")]),a("li",[i._v("0 是所有比特数字为0")]),a("li",[i._v("-1 是所有比特数字为1")]),a("li",[i._v("-2147483648（十六进制形式：-0x80000000）  最左边为1，其他比特位为0的整数  【32位】")]),a("li",[i._v("2147483647（十六进制形式：0x7fffffff）是除了最左边为0外，其他比特位都为1的整数。")])]),a("h3",{attrs:{id:"进制转换-r进制中的数位排列-r-index-相邻相关进制的一次方"}},[i._v("进制转换   R进制中的数位排列   R^index    相邻相关进制的一次方")]),a("ul",[a("li",[i._v("十---》二  ，对2取数值取余(模)，反向写出。")]),a("li",[i._v("二---》十  ，按位 值 * 2^index")]),a("li",[i._v("十---》八  ，对8取数值取余(模)，反向写出。")]),a("li",[i._v("八---》十  ，按位 值 * 8^index")]),a("li",[i._v("十六《--》十  与上面类似")]),a("li",[i._v("二---》八  ，三位一组，缺位处用0填补，然后按十进制进行转换。")]),a("li",[i._v("八---》二  ，三位一级，缺位处用0填补，然后按进进制进行转换。")]),a("li",[i._v("二---》十六 ，四位一组，8 4 2 1")]),a("li",[i._v("十---》二  先转成16进制(除16未模)，再用 8 4 2 1的方式转成二进制")]),a("li",[i._v("二---》十  迁转16，再转十")])]),a("h3",{attrs:{id:"负数，先写其补码形式，再进行进制转换【16位】"}},[i._v("负数，先写其补码形式，再进行进制转换【16位】")]),a("ul",[a("li",[i._v("十---》八  转二进制，补码、取反+1【符号位不变】，二--》八进制")])]),a("h3",{attrs:{id:"小数，0-8-16，取整数部分；拿小数部分乘以16，取整，再乘。"}},[i._v("小数，0.8*16，取整数部分；拿小数部分乘以16，取整，再乘。")])])}],!1,null,null,null);t.default=_.exports}}]);