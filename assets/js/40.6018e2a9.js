(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{213:function(t,e,i){"use strict";i.r(e);var l=i(0),s=Object(l.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"content"},[i("h1",{attrs:{id:"模块简介"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#模块简介"}},[t._v("#")]),t._v(" 模块简介")]),t._v(" "),i("ul",[i("li",[t._v("amd---典型代表require.js")]),t._v(" "),i("li",[t._v("cmd---典型代表sea.js")]),t._v(" "),i("li",[t._v("umd----兼容 cjs 与 amd 的模块")]),t._v(" "),i("li",[t._v("cjs--commonjs----nodejs----转换：skypack、 snowpack、vite\n"),i("ul",[i("li",[t._v("值拷贝")]),t._v(" "),i("li",[t._v("运行时加载")]),t._v(" "),i("li",[t._v("所谓 exports 仅仅是 module.exports 的引用而已")])])]),t._v(" "),i("li",[t._v("esm---支持动态导入 m = await import(\"xxx\"); m.default(xxx)，通过设置 type='module'来支持，但只支持 URL 路径\n"),i("ul",[i("li",[t._v("importMap，定义引入库路径对象，后面就可以支持只引入模块名无需写完整的 URL 了")]),t._v(" "),i("li",[t._v("也可以导入 JSON 和 CSS")]),t._v(" "),i("li",[t._v("预编译期间进行 treeShaking")]),t._v(" "),i("li",[t._v("编译时加载")]),t._v(" "),i("li",[t._v("值引用")])])])])])}],!1,null,null,null);e.default=s.exports}}]);