(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{242:function(v,_,i){"use strict";i.r(_);var t=i(6),a=Object(t.a)({},(function(){var v=this,_=v.$createElement,i=v._self._c||_;return i("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[i("h1",{attrs:{id:"位操作-与-运算"}},[v._v("位操作 与 运算")]),v._v(" "),i("h2",{attrs:{id:"位运算"}},[v._v("位运算")]),v._v(" "),i("h3",{attrs:{id:"a-b-按位与"}},[v._v("a & b  按位与")]),v._v(" "),i("p",[v._v("每一个比特位，只有两个操作数都为1时才为1，否则为0")]),v._v(" "),i("h3",{attrs:{id:"a-b-按位或"}},[v._v("a | b  按位或")]),v._v(" "),i("ul",[i("li",[v._v("每一个比特位，至少有一个操作数都为1时就为1，否则为0")])]),v._v(" "),i("h3",{attrs:{id:"a-b-按位异或"}},[v._v("a ^ b  按位异或")]),v._v(" "),i("ul",[i("li",[v._v("每一个比特位，当两个操作数的比特位 有且只有一个1时就为1，否则为0")])]),v._v(" "),i("h3",{attrs:{id:"a"}},[v._v("~ a")]),v._v(" "),i("ul",[i("li",[v._v("反转操作数的比特位，即0变成1，1变成0")])]),v._v(" "),i("h3",{attrs:{id:"a-b-左移-a情况下-a-2-【进行b次相乘】"}},[v._v("a << b  左移    A情况下：a * 2 【进行b次相乘】")]),v._v(" "),i("ul",[i("li",[v._v("将 a 的二进制形式向左移 b (< 32) 比特位，右边用0填充")])]),v._v(" "),i("h3",{attrs:{id:"a-b-右移-a情况下-a-2-【进行b次相除】"}},[v._v("a >> b  右移    A情况下：a / 2  【进行b次相除】")]),v._v(" "),i("ul",[i("li",[v._v("将 a 的二进制表示向右移 b (< 32) 位，丢弃被移出的位")])]),v._v(" "),i("h3",{attrs:{id:"a-b-无符号右移"}},[v._v("a >>> b 无符号右移")]),v._v(" "),i("ul",[i("li",[v._v("将 a 的二进制表示向右移 b (< 32) 位，丢弃被移出的位，并使用 0 在左侧填充。")])]),v._v(" "),i("h2",{attrs:{id:"规律"}},[v._v("规律")]),v._v(" "),i("ul",[i("li",[v._v("(~ 12 - 1)  即此值的负值")]),v._v(" "),i("li",[v._v("正值时，最左的比特位是0")]),v._v(" "),i("li",[v._v("负值时，最左的比特位是1，即最左边的比特位为符号位")]),v._v(" "),i("li",[v._v("0 是所有比特数字为0")]),v._v(" "),i("li",[v._v("-1 是所有比特数字为1")]),v._v(" "),i("li",[v._v("-2147483648（十六进制形式：-0x80000000）  最左边为1，其他比特位为0的整数  【32位】")]),v._v(" "),i("li",[v._v("2147483647（十六进制形式：0x7fffffff）是除了最左边为0外，其他比特位都为1的整数。")])]),v._v(" "),i("h3",{attrs:{id:"进制转换-r进制中的数位排列-r-index-相邻相关进制的一次方"}},[v._v("进制转换   R进制中的数位排列   R^index    相邻相关进制的一次方")]),v._v(" "),i("ul",[i("li",[v._v("十 转换成 二进制  ，对2取数值取余(模)，反向写出。")]),v._v(" "),i("li",[v._v("二 转换成 十进制  ，按位 值 * 2^index")]),v._v(" "),i("li",[v._v("十 转换成 八进制  ，对8取数值取余(模)，反向写出。")]),v._v(" "),i("li",[v._v("八 转换成 十进制  ，按位 值 * 8^index")]),v._v(" "),i("li",[v._v("十六 与 十进制的相互转换  与上面类似")]),v._v(" "),i("li",[v._v("二 转换成 八进制  ，三位一组，缺位处用0填补，然后按十进制进行转换。")]),v._v(" "),i("li",[v._v("八 转换成 二进制  ，三位一级，缺位处用0填补，然后按进进制进行转换。")]),v._v(" "),i("li",[v._v("二 转换成 十六进制 ，四位一组，8 4 2 1")]),v._v(" "),i("li",[v._v("十 转换成 二进制  先转成16进制(除16未模)，再用 8 4 2 1的方式转成二进制")]),v._v(" "),i("li",[v._v("二 转换成 十进制  迁转16，再转十")])]),v._v(" "),i("h3",{attrs:{id:"负数-先写其补码形式-再进行进制转换【16位】"}},[v._v("负数，先写其补码形式，再进行进制转换【16位】")]),v._v(" "),i("ul",[i("li",[v._v("十 转换成 八  转二进制，补码、取反-1【符号位不变】，二 转换成 八进制")])]),v._v(" "),i("h3",{attrs:{id:"小数-0-8-16-取整数部分-拿小数部分乘以16-取整-再乘"}},[v._v("小数，0.8*16，取整数部分；拿小数部分乘以16，取整，再乘")])])}),[],!1,null,null,null);_.default=a.exports}}]);