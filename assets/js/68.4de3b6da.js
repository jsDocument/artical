(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{241:function(v,i,_){"use strict";_.r(i);var e=_(0),S=Object(e.a)({},(function(){var v=this.$createElement;this._self._c;return this._m(0)}),[function(){var v=this,i=v.$createElement,_=v._self._c||i;return _("div",{staticClass:"content"},[_("h3",{attrs:{id:"单点登录"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#单点登录"}},[v._v("#")]),v._v(" 单点登录")]),v._v(" "),_("ul",[_("li",[v._v("多个应用以下，用户只需要一次登录，就可以访问所以新人的应用系统")]),v._v(" "),_("li",[v._v("CAS是 SSO 的一种框架，包括：CAS Server 和 CAS Client")]),v._v(" "),_("li",[v._v("CAS Server完成对用户的认证工作，需要独立部署")]),v._v(" "),_("li",[v._v("CAS Client负责处理对客户端"),_("code",[v._v("受保护资源的访问请求")]),v._v("，需要"),_("code",[v._v("对请求放进行身份认证时")]),v._v("，重新定向到 CAS Server 进行认证。")]),v._v(" "),_("li",[v._v("步骤：\n"),_("ul",[_("li",[v._v("当用户首次访问新浪微博时，新浪微博识别到用户未登录，将请求重定向到"),_("code",[v._v("认证中心")]),v._v("，认证中心也识别到用户未登录，则将请求重定向到"),_("code",[v._v("登录页")]),v._v("。")]),v._v(" "),_("li",[v._v("当用户已登录新浪微博访问新浪博客时，新浪博客识别到用户未登录，将请求重定向到"),_("code",[v._v("认证中心")]),v._v("，认证中心识别到用户已登录，"),_("code",[v._v("返回用户的身份")]),v._v("，此时用户无需登录即可使用新浪博客。")]),v._v(" "),_("li",[v._v("只要多个系统使用同一套单点登录框架那么它们将是相互信任的。")])])]),v._v(" "),_("li",[v._v("分类：同域SSO、同父域 SSO、跨域 SSO\n"),_("ul",[_("li",[v._v("同父域 SSO：服务器在返回 cookie 时，需要把 cookie 的 domain 设置为父域的")]),v._v(" "),_("li",[v._v("跨域 SSO：不同域时 cookie 无法共享，需要搭建 SSO 服务器")])])]),v._v(" "),_("li",[v._v("要点：\n"),_("ul",[_("li",[v._v("/login，/logout 接口")])])])]),v._v(" "),_("h4",{attrs:{id:"票据"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#票据"}},[v._v("#")]),v._v(" 票据")]),v._v(" "),_("ol",[_("li",[v._v("TGT (Ticket Grangting Ticket) : TGT 是 CAS 为用户签发的登录票据，拥有了 TGT，用户就可以证明自己在 CAS 成功登录过。")]),v._v(" "),_("li",[v._v("TGT 封装了 Cookie 值以及此 Cookie 值对应的用户信息。")]),v._v(" "),_("li",[v._v("TGC(Ticket Granting Cookie) : CAS Server 生成 TGT 放入自己的 Session 中，而 TGC 就是这个 Session 的唯一标识（SessionId），以 Cookie 形式放到浏览器端。")]),v._v(" "),_("li",[v._v("ST(Service Ticket) : ST 是 CAS 为用户签发的访问某一 service 的票据。")])]),v._v(" "),_("div",{staticClass:"tip custom-block"},[_("p",{staticClass:"custom-block-title"},[v._v("TIP")]),v._v(" "),_("p",[v._v("用户访问 service 时，service 发现用户没有 ST，则要求用户去 CAS 获取 ST。")])]),v._v(" "),_("h4",{attrs:{id:"跨域-sso（cas）的实现过程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#跨域-sso（cas）的实现过程"}},[v._v("#")]),v._v(" 跨域 SSO（CAS）的实现过程")]),v._v(" "),_("ul",[_("li",[v._v("用户未登录是的过程：\n"),_("ul",[_("li",[v._v("由于用户没有携带服务器上登录的cookie，所以服务器重定向到 SSO 服务器的地址。")]),v._v(" "),_("li",[v._v("由于用户没有携带在 SSO 服务器上登录的 TGC，所以 SSO 服务器判断用户未登录，给用户显示统一登录界面。")]),v._v(" "),_("li",[v._v("登录成功后，SSO 服务器构建用户在 SSO 登录的 TGT，同时返回一个 http 重定向（包含 sso 服务器派发的 ST ）。")]),v._v(" "),_("li",[v._v("重定向的 http response 中包含写 cookie。这个 cookie 代表用户在 SSO 中的登录状态，它的值是 TGC。")]),v._v(" "),_("li",[v._v("浏览器重定向到要访问的页面。此时重定向的 url 中携带着 SSO 服务器生成的 ST。根据 ST，服务器向 SSO 服务器发送请求，SSO 服务器验证票据的有效性。验证成功后，服务器知道用户已经在 sso 登录了，于是服务器构建用户登录 session。")])])]),v._v(" "),_("li",[v._v("用户已登录是的过程：")]),v._v(" "),_("li",[v._v("由于用户没有携带服务器上登录的cookie，所以服务器重定向到 SSO 服务器，去询问用户在 SSO 中的登录状态。")]),v._v(" "),_("li",[v._v("浏览器重定向到 SSO 服务器。由于已经向浏览器写入了携带 TGC 的 cookie，所以此时 SSO 服务器可以拿到，根据 TGC 去查找 TGT，如果找到，就判断用户已经在 sso 登录过了。")]),v._v(" "),_("li",[v._v("SSO 服务器返回一个重定向，重定向携带 ST。")]),v._v(" "),_("li",[v._v("浏览器带 ST 重定向到服务器。")]),v._v(" "),_("li",[v._v("服务器根据票据向 SSO 服务器发送请求，票据验证通过后，服务器知道用户已经在 sso 登录了，于是生成 session，向浏览器写入 cookie。")])])])}],!1,null,null,null);i.default=S.exports}}]);