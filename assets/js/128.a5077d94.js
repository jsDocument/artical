(window.webpackJsonp=window.webpackJsonp||[]).push([[128],{302:function(e,r,t){"use strict";t.r(r);var l=t(0),_=Object(l.a)({},(function(){var e=this.$createElement;this._self._c;return this._m(0)}),[function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("div",{staticClass:"content"},[t("h2",{attrs:{id:"application模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#application模块"}},[e._v("#")]),e._v(" application模块")]),e._v(" "),t("ul",[t("li",[e._v("init 默认配置")])]),e._v(" "),t("ol",[t("li",[e._v("挂载--请求、响应、引擎、设置")]),e._v(" "),t("li",[e._v("views")]),e._v(" "),t("li",[e._v("jsonp设置")]),e._v(" "),t("li",[e._v("router")])]),e._v(" "),t("ul",[t("li",[e._v("use")])]),e._v(" "),t("ol",[t("li",[e._v("lazyrouter 创建路由实例、")]),e._v(" "),t("li",[e._v("循环fns, router.use(path, fn)")]),e._v(" "),t("li",[e._v("router.use(path, (req, res, next)=>{  })")]),e._v(" "),t("li",[e._v("fn.emit('mount', this)")])]),e._v(" "),t("ul",[t("li",[e._v("route")])]),e._v(" "),t("ol",[t("li",[e._v("lazyrouter")]),e._v(" "),t("li",[e._v("返回this._router.route(path)")])]),e._v(" "),t("ul",[t("li",[t("p",[e._v("listen 创建服务并监听")])]),e._v(" "),t("li",[t("p",[e._v("render")])])]),e._v(" "),t("ol",[t("li",[e._v("获取 View")]),e._v(" "),t("li",[e._v("根据view引擎、默认引擎、root创建View实例")]),e._v(" "),t("li",[e._v("存入缓存")]),e._v(" "),t("li",[e._v("view.render(...)")])]),e._v(" "),t("ul",[t("li",[e._v("handle(req, res, callback)")])]),e._v(" "),t("ol",[t("li",[e._v("定义done 或 finnalhandler")]),e._v(" "),t("li",[e._v("不存在this._router, done()")]),e._v(" "),t("li",[e._v("router.handle(req, res, done)")])]),e._v(" "),t("ul",[t("li",[t("p",[e._v("engine this.engines[extension] = fn 设置引擎")])]),e._v(" "),t("li",[t("p",[e._v("param")])])]),e._v(" "),t("ol",[t("li",[e._v("lazyrouter")]),e._v(" "),t("li",[e._v("调用router.param(name, fn)")])]),e._v(" "),t("ul",[t("li",[e._v("set")])]),e._v(" "),t("ol",[t("li",[e._v("etab")]),e._v(" "),t("li",[e._v("query parser fn")]),e._v(" "),t("li",[e._v("trust proxy fn")]),e._v(" "),t("li",[e._v("设置其属性'@@symbol:trust_proxy_default'的特性")])]),e._v(" "),t("p",[t("code",[e._v("setPrototypeOf")])]),e._v(" "),t("h2",{attrs:{id:"router"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#router"}},[e._v("#")]),e._v(" router")]),e._v(" "),t("ul",[t("li",[e._v("构造函数")])]),e._v(" "),t("ol",[t("li",[e._v("定义router函数--\x3e调用router.handle")]),e._v(" "),t("li",[e._v("初始化实例属性")])]),e._v(" "),t("ul",[t("li",[t("p",[e._v("param ????")])]),e._v(" "),t("li",[t("p",[e._v("handle")])])]),e._v(" "),t("ol",[t("li",[e._v("done")]),e._v(" "),t("li",[e._v("next")])]),e._v(" "),t("ul",[t("li",[e._v("use(fn)")])]),e._v(" "),t("ol",[t("li",[e._v("callbacks 参数")]),e._v(" "),t("li",[e._v("Layer实例, layer.route = void 0; this.stack.push(layer), 返回this")])]),e._v(" "),t("ul",[t("li",[e._v("route(path)")])]),e._v(" "),t("ol",[t("li",[e._v("创建Route实例 route")]),e._v(" "),t("li",[e._v("Layer实例 layer.route = route; this.stack.push(layer); 返回route")])]),e._v(" "),t("h2",{attrs:{id:"route"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#route"}},[e._v("#")]),e._v(" Route")]),e._v(" "),t("ul",[t("li",[t("p",[e._v("构造函数, 初始化相应实例属性")])]),e._v(" "),t("li",[t("p",[e._v("dispatch(req, res, done)")])])]),e._v(" "),t("ol",[t("li",[e._v("idx = 0; this.stack长度为0, 执行done()")]),e._v(" "),t("li",[e._v("req.route = this")]),e._v(" "),t("li",[e._v("执行next()")]),e._v(" "),t("li",[e._v("next(err) 判断err为route, 则执行done(); err为router则执行done(err); 取出stack[idx++]相应的layer, !layer则done(err); 如果layer.method不等于 req.method则 next(err); 如果err, 则 layer.handle_err(); 否则 layer.handle_request()")])]),e._v(" "),t("ul",[t("li",[e._v("定义http请求方法")])]),e._v(" "),t("ol",[t("li",[e._v("this.path<---\x3e handle")]),e._v(" "),t("li",[e._v("添加layer实例相应的method方法")]),e._v(" "),t("li",[e._v("this.methods[method] = true, layer更新到this.stack中")])]),e._v(" "),t("ul",[t("li",[e._v("all 与上面方法实现类似")])]),e._v(" "),t("h2",{attrs:{id:"layer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#layer"}},[e._v("#")]),e._v(" layer")]),e._v(" "),t("ul",[t("li",[e._v("构造函数  初始化实例属性")]),e._v(" "),t("li",[e._v("handle_err(error, req, res, next)")])]),e._v(" "),t("ol",[t("li",[e._v("this.handle参数长度不等于4, next(error)")]),e._v(" "),t("li",[e._v("fn(error, req, res, next)")])]),e._v(" "),t("ul",[t("li",[e._v("handle_request(req, res, next)")])]),e._v(" "),t("ol",[t("li",[e._v("this.handle参数大于3, next()")]),e._v(" "),t("li",[e._v("this.handle(req, res, next)")])]),e._v(" "),t("h2",{attrs:{id:"view"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#view"}},[e._v("#")]),e._v(" View")]),e._v(" "),t("h2",{attrs:{id:"middleware"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#middleware"}},[e._v("#")]),e._v(" middleware")]),e._v(" "),t("ul",[t("li",[e._v("init, (req, res, next)=>{ 返回函数, 进行属性合并与初始化, 并调用next()}")]),e._v(" "),t("li",[e._v("query, (options)=>{ 处理参数, 返回函数query(req, res, next)=>{ req.query=... next()}}")])]),e._v(" "),t("h2",{attrs:{id:"methods"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#methods"}},[e._v("#")]),e._v(" methods")]),e._v(" "),t("ul",[t("li",[e._v("[ 'get', 'post', 'put', 'head', 'delete', 'options', 'trace', 'copy', 'lock', 'mkcol', 'move', 'purge', 'propfind', 'proppatch', 'unlock', 'report', 'mkactivity', 'checkout', 'merge', 'm-search', 'notify', 'subscribe', 'unsubscribe', 'patch', 'search', 'connect' ]")])]),e._v(" "),t("h2",{attrs:{id:"express源码阅读收获"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#express源码阅读收获"}},[e._v("#")]),e._v(" express源码阅读收获")]),e._v(" "),t("ol",[t("li",[e._v("路由handle--负责处理路由\n"),t("ul",[t("li",[e._v("根据req.url获取请求路径, ids=0")]),e._v(" "),t("li",[e._v("next()方法: this.routes获取路由表{path, handle, method}[ids++]项")]),e._v(" "),t("li",[e._v("url路径与routes中某个相同且method也相同, 则执行handle(req, res)")])])]),e._v(" "),t("li",[e._v("路由系统")])])])}],!1,null,null,null);r.default=_.exports}}]);