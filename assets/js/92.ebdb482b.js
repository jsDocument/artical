(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{265:function(e,v,_){"use strict";_.r(v);var t=_(0),i=Object(t.a)({},(function(){var e=this.$createElement;this._self._c;return this._m(0)}),[function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("div",{staticClass:"content"},[_("h3",{attrs:{id:"多个条件『逻辑运算』"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#多个条件『逻辑运算』"}},[e._v("#")]),e._v(" 多个条件『逻辑运算』")]),e._v(" "),_("ul",[_("li",[e._v("或 {$or: [{A}, {B}]}   {$in: [A, B]}  {$nin: []}")]),e._v(" "),_("li",[e._v("与 {A, B}")]),e._v(" "),_("li",[e._v("$and")]),e._v(" "),_("li",[e._v("$not  or取反")]),e._v(" "),_("li",[e._v("$nor")])]),e._v(" "),_("h3",{attrs:{id:"算术运算-或-段的统计运算"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#算术运算-或-段的统计运算"}},[e._v("#")]),e._v(" 算术运算 或 段的统计运算")]),e._v(" "),_("ul",[_("li",[e._v("$mod")])]),e._v(" "),_("h3",{attrs:{id:"数组项查找"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数组项查找"}},[e._v("#")]),e._v(" 数组项查找")]),e._v(" "),_("ul",[_("li",[e._v("{key: {$elemMatch:{innerKey:condition}}}  符号条件的项")]),e._v(" "),_("li",[e._v("{questions:{$elemMatch:{limit_time:{$exists:true}}}}")])]),e._v(" "),_("h3",{attrs:{id:"综合"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#综合"}},[e._v("#")]),e._v(" 综合")]),e._v(" "),_("ul",[_("li",[e._v("$expr")]),e._v(" "),_("li",[e._v('{"$where": ()=>{return this为文档}')]),e._v(" "),_("li",[e._v("$text")]),e._v(" "),_("li",[e._v("$jsonSchema")])]),e._v(" "),_("h3",{attrs:{id:"数组-更新"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数组-更新"}},[e._v("#")]),e._v(" 数组 更新")]),e._v(" "),_("ul",[_("li",[e._v("{$all: []}  匹配数据中多个元素")]),e._v(" "),_("li",[e._v("$size 数组长度")]),e._v(" "),_("li",[e._v("$push, 键不存在时会创建")]),e._v(" "),_("li",[e._v("$addToSet  组中添加一个元素，存在则不添加")]),e._v(" "),_("li",[e._v("$each [] 循环数组元素")]),e._v(" "),_("li",[e._v("$pop  尾部删除一具元素, 1/-1为首部元素")]),e._v(" "),_("li",[e._v("$pull  删除指定value元素")]),e._v(" "),_("li",[e._v("$elemMatch: {多个表达式}")]),e._v(" "),_("li",[e._v("数组中的对象")])]),e._v(" "),_("ol",[_("li",[e._v('{"key": {innerKey: value}}')]),e._v(" "),_("li",[e._v('{"key.innerKey": {condition}}')]),e._v(" "),_("li",[e._v('{"key.index.innerKey":{condition}}')]),e._v(" "),_("li",[e._v('{"key": {$elemMatch: {innerKey: {condition}}}}')])]),e._v(" "),_("h3",{attrs:{id:"配置"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[e._v("#")]),e._v(" 配置")]),e._v(" "),_("ol",[_("li",[e._v("multi")]),e._v(" "),_("li",[e._v("upsert")])]),e._v(" "),_("h3",{attrs:{id:"字段更新"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#字段更新"}},[e._v("#")]),e._v(" 字段更新")]),e._v(" "),_("ol",[_("li",[e._v('$currentDate: {key: {$type: "date"/"timestamp"}}')]),e._v(" "),_("li",[e._v("$inc")]),e._v(" "),_("li",[e._v("$min, $max")]),e._v(" "),_("li",[e._v("$mul:{key: 2} 每项乘以2")]),e._v(" "),_("li",[e._v("$rename")]),e._v(" "),_("li",[e._v("$set")]),e._v(" "),_("li",[e._v("$setOnInsert:{key: value} 设置默认值")]),e._v(" "),_("li",[e._v("$unset")])]),e._v(" "),_("h3",{attrs:{id:"数组更新"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数组更新"}},[e._v("#")]),e._v(" 数组更新")]),e._v(" "),_("ul",[_("li",[e._v("key.$.field")]),e._v(" "),_("li",[e._v("key.$ 第一个匹配项")]),e._v(" "),_("li",[e._v("key.$[] 所有元素")]),e._v(" "),_("li",[e._v("key.$[].field")]),e._v(" "),_("li",[e._v("key.$[identify]")]),e._v(" "),_("li",[e._v("$addToSet 向一个数组字段添加值，除非该数组已有该值")]),e._v(" "),_("li",[e._v("$pop, $pull, $push, $pushAll, $each, $position, $slice, $sort")]),e._v(" "),_("li",[e._v("{$push: {key: {$each: []}}}")]),e._v(" "),_("li",[e._v("$position 必须与$each一起使用, 决定push的起始位置")])]),e._v(" "),_("h3",{attrs:{id:"是否返回某个字段-key-0-1"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#是否返回某个字段-key-0-1"}},[e._v("#")]),e._v(" 是否返回某个字段, {key: 0/1}")]),e._v(" "),_("ul",[_("li",[e._v("{key: {$slice: -1}} [0,1] 数组的最后一项元素")]),e._v(" "),_("li",[e._v('{"key.$": 1/0}  数组查询结果的第一项')]),e._v(" "),_("li",[e._v('"questions.$": 1  纯数组  ???')]),e._v(" "),_("li",[e._v("key.innerKey")])]),e._v(" "),_("h3",{attrs:{id:"单运算、过滤"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#单运算、过滤"}},[e._v("#")]),e._v(" 单运算、过滤")]),e._v(" "),_("ul",[_("li",[e._v("{$regex: //, $options: \"i\" }    '(?i)a(?-i)cme' ???")]),e._v(" "),_("li",[e._v("$filter")]),e._v(" "),_("li",[e._v("$gt $lt $lte  $gte")]),e._v(" "),_("li",[e._v("$eq  $ne")]),e._v(" "),_("li",[e._v("$exists  $type 类型 【1双精度, 2字符串, 3对象, 4数组, 5二进制, 6未定义, 7ObjectId, 8布尔, 9日期, 10Null, 11正则, 12DBPointer, 13javascript, 14Symbol, 15javascript(有scope), 16长度为32的整数, 17时间戳, 18长度为64整数,19 Decimal128, -1 MinKey, 127 MaxKey】")]),e._v(" "),_("li",[e._v("不存在")])]),e._v(" "),_("h3",{attrs:{id:"其他方法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#其他方法"}},[e._v("#")]),e._v(" 其他方法")]),e._v(" "),_("ul",[_("li",[e._v("ObjectId(id).getTimestamp()")])]),e._v(" "),_("h3",{attrs:{id:"更新"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#更新"}},[e._v("#")]),e._v(" 更新")]),e._v(" "),_("ul",[_("li",[e._v("{$set: {key: value}}  更新其中一个字段  unset 删除一个键")]),e._v(" "),_("li",[e._v("{$inc: {key: 3}}")]),e._v(" "),_("li",[e._v("{$currentDate: {field: true}}")]),e._v(" "),_("li",[e._v('定义 {arrayFilters: ["element": {condition}]}  使用 {$set: {"key.$[element]": value} 对符合条件的所有数组元素')]),e._v(" "),_("li",[e._v('定义 {arrayFilters: ["elem.grade": {condition}]}  使用 {$set: {"key.$[elem].innerKey": value} 对符合条件的数组对象元素')])])])}],!1,null,null,null);v.default=i.exports}}]);