(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{127:function(e,t,l){"use strict";l.r(t);var a=l(0),i=Object(a.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,l=e._self._c||t;return l("div",{staticClass:"content"},[l("p",[e._v("#鼠标事件")]),l("h2",{attrs:{id:"drag事件"}},[e._v("drag事件")]),l("ol",[l("li",[e._v("DataTransfer 对象：退拽对象用来传递的媒介，使用一般为Event.dataTransfer。")]),l("li",[e._v("draggable 属性：就是标签元素要设置draggable=true，否则不会有效果，例如：\n"),l("div",{attrs:{title:"拖拽我",draggable:"true"}},[e._v("列表1")])]),l("li",[e._v("ondragstart 事件：当拖拽元素开始被拖拽的时候触发的事件，此事件作用在被拖曳元素上----开始")]),l("li",[e._v("ondragenter 事件：当拖曳元素进入目标元素的时候触发的事件，此事件作用在目标元素上----进入目标，目标元素事件")]),l("li",[e._v("ondragover 事件：拖拽元素在目标元素上移动的时候触发的事件，此事件作用在目标元素上----在目标上，目标元素事件")]),l("li",[e._v("ondragleave 事件：拖拽元素在目标元素上移动的时候触发的事件，此事件作用在目标元素上----离开目标，目标元素事件")]),l("li",[e._v("ondrop 事件：被拖拽的元素在目标元素上同时鼠标放开触发的事件，此事件作用在目标元素上----放入目标，目标元素事件")]),l("li",[e._v("ondragend 事件：当拖拽完成后触发的事件，此事件作用在被拖曳元素上---结束")]),l("li",[e._v("event.preventDefault() 方法：阻止默认的些事件方法等执行。在ondragover中一定要执行preventDefault()，否则ondrop事件不会被触发。另外，如果是从其他应用软件或是文件中拖东西进来，尤其是图片的时候，默认的动作是显示这个图片或是相关信息，并不是真的执行drop。此时需要用用document的ondragover事件把它直接干掉。")]),l("li",[e._v("event.setDataTransfer.effectAllowed 属性：就是拖拽的效果。")]),l("li",[e._v("evetn.setDataTransfer.setDragImage() 方法：指定图片或者文档元素做拖动时的视觉效果。")])]),l("h2",{attrs:{id:"datatransfer-属性"}},[e._v("dataTransfer 属性")]),l("ul",[l("li",[e._v("dropEffect 在dragenter和dragover事件中处理成需要的效果值；在drop和dragend事件中将初始化成期望的动作。\n"),l("ol",[l("li",[e._v("copy: 复制到新的位置")]),l("li",[e._v("move: 移动到新的位置.")]),l("li",[e._v("link: 建立一个源位置到新位置的链接.")]),l("li",[e._v("none: 禁止放置（禁止任何操作）.")])])]),l("li",[e._v("effectAllowed 拖动时被允许的效果，可以在dragstart事件与dragenter及dragover事件中设置期望的效果\n"),l("ol",[l("li",[e._v("copy: 复制到新的位置.")]),l("li",[e._v("move:移动到新的位置 .")]),l("li",[e._v("link:建立一个源位置到新位置的链接.")]),l("li",[e._v("copyLink: 允许复制或者链接.")]),l("li",[e._v("copyMove: 允许复制或者移动.")]),l("li",[e._v("linkMove: 允许链接或者移动.")]),l("li",[e._v("all: 允许所有的操作.")]),l("li",[e._v("none: 禁止所有操作.")]),l("li",[e._v("uninitialized: 缺省值（默认值）, 相当于 all.")])])]),l("li",[e._v("files 一个在数据传输上可用的本地文件列表，如涉及拖动文件时。")]),l("li",[e._v("types 保存一个被存储的类型列表作为第一项，顺序与被添加的数据的顺序一致。")]),l("li",[e._v("mozCursor: auto, default")])]),l("h2",{attrs:{id:"datatransfer-方法"}},[e._v("dataTransfer 方法")]),l("ol",[l("li",[e._v("obj.addElement() 设置手动源，修改这项将会影响拖动的哪个节点和dragend事件的触发。默认目标是被拖动的节点。")]),l("li",[e._v("obj.clearData(type) 删除与给定类型关联的数据。或者元参时删除所有类型相关联的数据")]),l("li",[e._v("obj.getData(type) 获取指定类型的数据")]),l("li",[e._v("obj.setData(type, data) 给定的类型设置数据")]),l("li",[e._v("obj.setDragImage(imgElement, offsetX, offsetY)")])]),l("h2",{attrs:{id:"select事件"}},[e._v("select事件")]),l("ol",[l("li",[e._v("onselect 输入框文本先中时触发")]),l("li",[e._v("onselectStart  用于所以对象，但不被input 和textarea支持  user-select")])]),l("h2",{attrs:{id:"mouse事件"}},[e._v("mouse事件")]),l("ol",[l("li",[e._v("mousedown:鼠标按钮被按下（左键或者右键）时触发。不能通过键盘触发。")]),l("li",[e._v("mouseup:鼠标按钮被释放弹起时触发。不能通过键盘触发。")]),l("li",[e._v("click:单击鼠标左键或者按下回车键时触发。这点对确保易访问性很重要，意味着onclick事件处理程序既可以通过键盘也可以通过鼠标执行。 1+2连续；取消了其中一个click也不会被触发")]),l("li",[e._v("dblclick:双击鼠标左键时触发。")]),l("li",[e._v("mouseover:鼠标移入目标元素上方。鼠标移到其"),l("code",[e._v("后代元素上时会触发")]),e._v("。")]),l("li",[e._v("mouseout:鼠标移出目标元素上方。")]),l("li",[e._v("mouseenter:鼠标移入元素范围内触发，该事件不冒泡，即鼠标移到其"),l("code",[e._v("后代元素上时不会触发")]),e._v("。")]),l("li",[e._v("mouseleave:鼠标移出元素范围时触发，该事件不冒泡，即鼠标移到其后代元素时不会触发。")]),l("li",[e._v("mousemove:鼠标在元素内部移到时不断触发。不能通过键盘触发。")])]),l("h2",{attrs:{id:"事件位置"}},[e._v("事件位置")]),l("ol",[l("li",[e._v("clientX, clientY")]),l("li",[e._v("layerX, layerY")]),l("li",[e._v("offsetX, offsetY")]),l("li",[e._v("movementX, movementY")]),l("li",[e._v("pageX, pageY")]),l("li",[e._v("screenX, screenY")])]),l("h2",{attrs:{id:"touch事件-todo"}},[e._v("touch事件(todo...)")]),l("h2",{attrs:{id:"动画事件"}},[e._v("动画事件")]),l("ol",[l("li",[e._v("TransitionEnd")]),l("li",[e._v("AnimationEnd")])])])}],!1,null,null,null);t.default=i.exports}}]);