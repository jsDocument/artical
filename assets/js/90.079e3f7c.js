(window.webpackJsonp=window.webpackJsonp||[]).push([[90],{96:function(t,i,l){"use strict";l.r(i);var e=l(0),n=Object(e.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,i=t.$createElement,l=t._self._c||i;return l("div",{staticClass:"content"},[l("h1",{attrs:{id:"疑问及待更新部分"}},[t._v("疑问及待更新部分")]),l("ol",[l("li",[t._v("_asComponent 是什么时候更新的？判断完指令区别时？")]),l("li",[t._v("_fromParent")]),l("li",[t._v("mergeOptions的返回结果")]),l("li",[t._v("attach detach, hook的事件添加是什么时候？")]),l("li",[t._v("shouldPropagate")]),l("li",[t._v("循环第一个子元素, 最后一个子元素？")]),l("li",[t._v("cloneNode")]),l("li",[t._v("_checkStatement")]),l("li",[t._v("watcher set")]),l("li",[t._v("_setData")]),l("li",[t._v("evaluate")]),l("li",[t._v("filters文件夹的文件")]),l("li",[t._v("path 不同模式的意义, transition[2]")]),l("li",[t._v("filter定义与transition如何运用的？")]),l("li",[t._v("global")]),l("li",[t._v("表达式运算 与 设置与更新的监听")]),l("li",[t._v("解析过程与运算过程 图")]),l("li",[t._v("监听过程图")]),l("li",[t._v("debounce一段时间等待, 回调为一直更新timeout, 直到time结束执行func, 返回result,")]),l("li",[t._v("nextTick 返回函数更新cb到队列, 状态可以则立即执行, 定时执行，执行开始先更新状态再执行队列的副本")]),l("li",[t._v("toArray(list, start), i = list.length - start 倒序更新到ret[i] = list[i+start]")]),l("li",[t._v("bind 返回一个函数, 再返回对函数的apply或call调用")]),l("li",[t._v("触发flush事件与init事件？？？ FragmentFactory")])]),l("ul",[l("li",[l("p",[t._v("__vue__的作用，__vue_anchor的作用")])]),l("li",[l("p",[t._v("_callhook, attach, detach")])])]),l("ol",{attrs:{start:"24"}},[l("li",[t._v("use(plugin) 调用plugin 或 plugin.install, 更新plugin.installed的状态")]),l("li",[t._v("createClass(name) ，返回创建匿名函数, 参数为options, 内容为调用this._init(options)")]),l("li",[t._v("extend(extendOptions),\n"),l("ul",[l("li",[t._v("创建子类")]),l("li",[t._v("Super.prototype创建子类原型")]),l("li",[t._v("更新子类原型的构造函数, 子类cid")]),l("li",[t._v("将父类options与参数合并添加到子类options,")]),l("li",[t._v("添加子类指令、组件 ...的定义指向父类的,")]),l("li",[t._v("Sub.options.component[name] = Sub")]),l("li",[t._v("是第一次扩展extendOptions._Ctor = Sub")]),l("li",[t._v("返回Sub")])])])])])}],!1,null,null,null);i.default=n.exports}}]);