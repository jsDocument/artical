(window.webpackJsonp=window.webpackJsonp||[]).push([[108],{282:function(r,e,t){"use strict";t.r(e);var a=t(0),f=Object(a.a)({},(function(){var r=this.$createElement;this._self._c;return this._m(0)}),[function(){var r=this,e=r.$createElement,t=r._self._c||e;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"buffer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#buffer"}},[r._v("#")]),r._v(" Buffer")]),r._v(" "),t("h2",{attrs:{id:"buffer-代表一个二进制缓冲区"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#buffer-代表一个二进制缓冲区"}},[r._v("#")]),r._v(" Buffer 代表一个二进制缓冲区")]),r._v(" "),t("ul",[t("li",[r._v("类似一个数组, 有下标、有长度、有剪切复制等操作, 但Buffer的大小在被创建时确定, 无法调整。")]),r._v(" "),t("li",[r._v("Buffer处理的是节点, 两位十六进制, 因此整数范围为0~255")]),r._v(" "),t("li",[r._v("Buffer用来处理文件I/O或网络I/O传输的二进制数据, 字符串用来呈现, 传输用Buffer速度会快很多, 但操作字符串比Buffer快很多。")]),r._v(" "),t("li",[r._v("Buffer和字符串可以互转, 还可以设置字符集编码")])]),r._v(" "),t("h2",{attrs:{id:"buffer内存分配与性能优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#buffer内存分配与性能优化"}},[r._v("#")]),r._v(" Buffer内存分配与性能优化")]),r._v(" "),t("ul",[t("li",[r._v("Buffer是典型的javascript与c++ 结合的模块, 与性能有关的c++来实现, javascript负责衔接和提供接口")]),r._v(" "),t("li",[r._v("Buffer所占的内存不是V8分配的, 是独立于V8堆内存之外的内存, 通过c++层面实现内存申请、javascript负责分配内存")])]),r._v(" "),t("h2",{attrs:{id:"常用方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用方法"}},[r._v("#")]),r._v(" 常用方法")]),r._v(" "),t("ul",[t("li",[t("p",[r._v("Buffer.alloc(size) 请求一个Buffer内存时, 会以8KB为界限来判断分配的是大对象还是小对象, 小对象存入剩余内存池, 不够再分配一个8KB的内存池; 大对象直接采用c++层面申请的内存, 因些申请一个大内存池比申请多个小内存池要快很多。")])]),r._v(" "),t("li",[t("p",[r._v("Buffer.from()")])]),r._v(" "),t("li",[t("p",[r._v("Buffer.allocUnsafe")])]),r._v(" "),t("li",[t("p",[r._v("Buffer.byteLength()")])]),r._v(" "),t("li",[t("p",[r._v("Buffer.compare()")])]),r._v(" "),t("li",[t("p",[r._v("Buffer.concat()")])]),r._v(" "),t("li",[t("p",[r._v("Buffer.isBuffer()")])]),r._v(" "),t("li",[t("p",[r._v("Buffer.isEncoding()")])])]),r._v(" "),t("h2",{attrs:{id:"实例属性方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实例属性方法"}},[r._v("#")]),r._v(" 实例属性方法")]),r._v(" "),t("ul",[t("li",[r._v("toString('encode')")])]),r._v(" "),t("h2",{attrs:{id:"编码类型：buffer-isencoding-encoding-判断是否为编码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编码类型：buffer-isencoding-encoding-判断是否为编码"}},[r._v("#")]),r._v(" 编码类型：Buffer.isEncoding(encoding)判断是否为编码")]),r._v(" "),t("ol",[t("li",[r._v("utf8，多字节编码的Unicode字符，大多数文档和网页采用这种编码格式")]),r._v(" "),t("li",[r._v("ascii，8bit编码，一个字符占1个字节")]),r._v(" "),t("li",[r._v("utf16le，小端编码的unicode字符")]),r._v(" "),t("li",[r._v("utf16be，大端编码的unicode")]),r._v(" "),t("li",[r._v("ucs2，unicode编码，每个字符占两个字节")]),r._v(" "),t("li",[r._v("base64，Base-64字符串编码")]),r._v(" "),t("li",[r._v("hex，每个字节编码为两个十六进制字符")])]),r._v(" "),t("h2",{attrs:{id:"buffer也是uint8array实例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#buffer也是uint8array实例"}},[r._v("#")]),r._v(" Buffer也是Uint8Array实例")]),r._v(" "),t("h2",{attrs:{id:"读数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#读数据"}},[r._v("#")]),r._v(" 读数据")]),r._v(" "),t("ul",[t("li",[r._v("buf[index]")]),r._v(" "),t("li",[r._v("buf.readIntXXX，buf.readUintXXX")]),r._v(" "),t("li",[r._v("JSON.stringify(buf)会自动调用buf.toJSON()方法")])]),r._v(" "),t("h2",{attrs:{id:"写数据"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#写数据"}},[r._v("#")]),r._v(" 写数据")]),r._v(" "),t("ul",[t("li",[r._v("buf.write(string[, offset][, length][, encoding])")])]),r._v(" "),t("p",[r._v("其他方法：writeUInt8、writeUInt16LE、writeUInt16BE、writeUInt31LE、writeUInt32BE、writeInt8、writeInt16LE、writeInt32LE")]),r._v(" "),t("h2",{attrs:{id:"创建new-buffer-buffer-size-array-str-encoding"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建new-buffer-buffer-size-array-str-encoding"}},[r._v("#")]),r._v(" 创建new Buffer(buffer/size/array/str[,encoding])")]),r._v(" "),t("p",[r._v("[^ 分配的缓冲区，是未初始化的，那块内存里，可能是脏的]")])])}],!1,null,null,null);e.default=f.exports}}]);