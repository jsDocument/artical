(window.webpackJsonp=window.webpackJsonp||[]).push([[202],{386:function(e,t,a){"use strict";a.r(t);var r=a(0),n=Object(r.a)({},(function(){var e=this.$createElement;this._self._c;return this._m(0)}),[function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[a("h4",{attrs:{id:"dom操作的几个方法实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom操作的几个方法实现"}},[e._v("#")]),e._v(" DOM操作的几个方法实现")]),e._v(" "),a("h5",{attrs:{id:"replace-target-el"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#replace-target-el"}},[e._v("#")]),e._v(" replace(target, el)")]),e._v(" "),a("ul",[a("li",[e._v("用target.parentNode 父元素parent, parent.replaceChild(el, target)用el替换target")])]),e._v(" "),a("h5",{attrs:{id:"before-el-target"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#before-el-target"}},[e._v("#")]),e._v(" before(el, target)")]),e._v(" "),a("ul",[a("li",[e._v("target的父元素进行insertBefore")])]),e._v(" "),a("h5",{attrs:{id:"after-el-target"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#after-el-target"}},[e._v("#")]),e._v(" after(el, target)")]),e._v(" "),a("ul",[a("li",[e._v("target有nextSibling， 调用before(el, target.nextSibling)")]),e._v(" "),a("li",[e._v("否则追加到子元素到target的父节点")])]),e._v(" "),a("h5",{attrs:{id:"prepend-el-target"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prepend-el-target"}},[e._v("#")]),e._v(" prePend(el, target)")]),e._v(" "),a("ul",[a("li",[e._v("target为第一个元素时用before(el, target.firstChild)")]),e._v(" "),a("li",[e._v("否则el追加到target")])]),e._v(" "),a("h5",{attrs:{id:"indoc-node"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#indoc-node"}},[e._v("#")]),e._v(" inDoc(node)")]),e._v(" "),a("ul",[a("li",[e._v("doc = document.documentElement, parent= node.parentNode")]),e._v(" "),a("li",[e._v("doc === node 或 doc 等于parent 或 parent的节点类型为1 且 doc.contains(parent)")])]),e._v(" "),a("h5",{attrs:{id:"extractcontent-el-asfragment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#extractcontent-el-asfragment"}},[e._v("#")]),e._v(" extractContent(el, asFragment)")]),e._v(" "),a("ul",[a("li",[e._v("el为template元素, 且el.content为文档片断, el = el.content")]),e._v(" "),a("li",[e._v("el有子元素, 则去除空白节点与注释节点, 循环el.firstChild将其追加到一个新的frag或div节点并返回")])]),e._v(" "),a("h5",{attrs:{id:"trimnode-node"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#trimnode-node"}},[e._v("#")]),e._v(" trimNode(node)")]),e._v(" "),a("ul",[a("li",[e._v("循环node.firstChild, 移除空白节点")]),e._v(" "),a("li",[e._v("循环node.lastChild, 移除空白节点")])]),e._v(" "),a("h5",{attrs:{id:"mapnoderange-node-end-op"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mapnoderange-node-end-op"}},[e._v("#")]),e._v(" mapNodeRange(node, end, op)")]),e._v(" "),a("ul",[a("li",[e._v("循环node !==end, next = node.nextsibling, 对node进行op(), node = next")]),e._v(" "),a("li",[e._v("op(end)")])]),e._v(" "),a("h5",{attrs:{id:"removenoderange-start-end-vm-frag-cb"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#removenoderange-start-end-vm-frag-cb"}},[e._v("#")]),e._v(" removeNodeRange(start, end, vm, frag, cb)")]),e._v(" "),a("ul",[a("li",[e._v("done 完成状态")]),e._v(" "),a("li",[e._v("removed 要移除的数量")]),e._v(" "),a("li",[e._v("nodes 要移除的节点")]),e._v(" "),a("li",[e._v("mapNodeRange(start, end, cb), 更新node到nodes, 更新完成后done = true; 移除回调将nodes追加到frag, 并执行cb()")])])])}],!1,null,null,null);t.default=n.exports}}]);