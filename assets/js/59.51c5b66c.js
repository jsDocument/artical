(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{145:function(t,e,l){"use strict";l.r(e);var i=l(0),n=Object(i.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,l=t._self._c||e;return l("div",{staticClass:"content"},[l("h1",{attrs:{id:"事件"}},[t._v("事件")]),l("ol",[l("li",[t._v("mouseover与mouseenter事件的区别\nmouseover事件, 鼠标每次进入都会触发该事件, 事件进行冒泡; 而mouseenter只会触发一次, 事件不进行冒泡。")]),l("li",[t._v("移动端click事件行为与PC端有什么不同, 如何屏蔽掉这个不同\n移动端click会有300ms的延迟, 因为手机浏览器需要处理复杂的手势动作, 浏览器厂商为了识别其他手势动作, 所以加了300ms的延迟; 引入fastclick来检测到touchEnd事件时, 通过DOM自定义事件立即触发一个模拟click事件, 并把浏览器300ms后的真正的click事件阻止掉。")]),l("li",[t._v("Event中, currentTarget与target之间的区别\n遍历DOM时currentTarget识别事件的当前目标, event.target识别事件发生的元素")]),l("li",[t._v("事件捕获、事件冒泡、与阻止事件冒泡与默认事件")])]),l("ul",[l("li",[t._v("事件分为两个阶段: 事件捕获即从根节点查找当前事件发生的元素的过程; 事件冒泡即从事件发生的元素到根节点的过程。")]),l("li",[t._v("e.stopPropagation()")]),l("li",[t._v("e.preventDefault() 阻止默认事件")])]),l("ol",{attrs:{start:"5"}},[l("li",[t._v("移动端的点击穿透, 原因与解决方法")])]),l("ul",[l("li",[t._v("由于click事件延迟300ms触发, 那么如果300ms内页面显示变化, 会出现实际点击元素触发了touch事件, 300ms后又触发了click事件的情况")])]),l("ol",{attrs:{start:"6"}},[l("li",[t._v("事件委托\n指利用事件冒泡, 通过指定一个事件处理来管理一种类型的所有事件, 即当些事件处理程序被触发时, 通过当前事件中的target来确定究竟是哪个元素触发了事件, 从面达到一次注册, 多个事件触发事件的目的。")]),l("li",[t._v("事件循环")])]),l("ul",[l("li",[t._v("javascript是单线程, 『主线程』负责执行所有的同步任务, 一旦所有的同步任务执行完成了, 则立即从任务队列中读取最优先的任务放到『主线程』中执行, 如些循环往复。")])]),l("ol",{attrs:{start:"8"}},[l("li",[t._v("css3哪些属性影响Js中的事件: pointer-events, touch-action并讲解一下")])]),l("ul",[l("li",[t._v("pointer-events: 某个特定的图形元素可以成为鼠标事件的target, 当该属性值设定为none时表示鼠标事件『穿透』该元素并且指定该元素『下面』的任何东西, 其他值时鼠标事件可以指向后代元素, 这样鼠标在捕获或冒泡阶段触发父元素的事件侦听器。")]),l("li",[t._v("touch-action: 指定某个给定的区域是否允许用户操作, 以及如何响应用户的操作。")])])])}],!1,null,null,null);e.default=n.exports}}]);