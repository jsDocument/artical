(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{65:function(e,t,l){"use strict";l.r(t);var i=l(0),a=Object(i.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,t=e.$createElement,l=e._self._c||t;return l("div",{staticClass:"content"},[l("h1",{attrs:{id:"目录结构"}},[e._v("目录结构")]),l("ul",[l("li",[e._v("addons——一些比较常用的插件、工具")]),l("li",[e._v("isomorphic\n"),l("ul",[l("li",[e._v("React.js 暴露对外的API")]),l("li",[e._v("modern 定义的ReactComponent与PureReactComponent")]),l("li",[e._v("hooks")]),l("li",[e._v("classic")]),l("li",[e._v("children")])])]),l("li",[e._v("shared——公共方法")]),l("li",[e._v("test——测试方法")]),l("li",[e._v("umd")]),l("li",[e._v("renderers——React核心代码, 渲染部分\n"),l("ul",[l("li",[e._v("art")]),l("li",[e._v("dom")]),l("li",[e._v("stack/client")]),l("li",[e._v("stack/server")]),l("li",[e._v("stack/reconciler 协调器")]),l("li",[e._v("shared")]),l("li",[e._v("shared/event  事件处理")]),l("li",[e._v("fiber  重写了React核心算法, 架构进行了升级, 未来可能会用到")]),l("li",[e._v("native 跨平台实现Android和IOS")])])])]),l("h2",{attrs:{id:"实现中重要的点"}},[e._v("实现中重要的点")]),l("ul",[l("li",[e._v("元素和组件的创建\n"),l("ol",[l("li",[e._v("ReactElement元素是一个数据类, 包含props, refs, key 等变量")]),l("li",[e._v("ReactComponent是一个控制类, 包含组件状态, 操作方法等, 是React对内的一个很得要的类。")])])]),l("li",[e._v("createClass() 创建组件类对象")]),l("li",[e._v("createElement() 创建组件实例对象, JSX经过babel调用的createElement()创建实例对象")]),l("li",[e._v("React组件插入DOM流程: 创建了ReactElement和ReactComponent后, 还需要将virtual DOM插入真实的DOM中, React利用virtual DOM生成HMTL, 将HTML插入父组件中, 面root组件正好是我们ReactDOM.render()方法中传入的DOM原生对象。")]),l("li",[e._v("React生命周期")]),l("li",[e._v("setState 数据绑定, 利用队列和transaction来管理setState， 避免无谓的界面更新")])]),l("h2",{attrs:{id:"fbjs-工具函数集"}},[e._v("fbjs 工具函数集")])])}],!1,null,null,null);t.default=a.exports}}]);