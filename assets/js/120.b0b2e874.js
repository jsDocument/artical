(window.webpackJsonp=window.webpackJsonp||[]).push([[120],{293:function(s,n,t){"use strict";t.r(n);var a=t(0),e=Object(a.a)({},(function(){var s=this.$createElement;this._self._c;return this._m(0)}),[function(){var s=this,n=s.$createElement,t=s._self._c||n;return t("div",{staticClass:"content"},[t("h2",{attrs:{id:"输入流stdin、输出流stdout、错误流stderr"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#输入流stdin、输出流stdout、错误流stderr"}},[s._v("#")]),s._v(" 输入流stdin、输出流stdout、错误流stderr")]),s._v(" "),t("ol",[t("li",[t("blockquote",[t("p",[s._v("重定向到哪里")])])]),s._v(" "),t("li",[s._v("1标准输出，2标准错误 2>&1 & 标准错误也输出到标准输出中 [0,1,2,&]>/dev/null 输出到空设备，即不输出；最后一个&表示后台执行")]),s._v(" "),t("li",[s._v("cmd >file> 2>&1 标准输出被重定向到了file，将标准错误拷贝到了标准输出即同样被重定向到了file")]),s._v(" "),t("li",[s._v("cmd 2>&1 > file 标准错误拷贝了标准输出的行为，但此时标准输出还是输出到终端；> file时标准输出才被重定向到了file，但标准错误还是输出到终端")]),s._v(" "),t("li",[s._v("cmd <<EOF 将END作为最后输入 <<-EOF 删除前导制表符")]),s._v(" "),t("li",[s._v("eof")])]),s._v(" "),t("h2",{attrs:{id:"内置命令-cd-bread-exec"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#内置命令-cd-bread-exec"}},[s._v("#")]),s._v(" 内置命令 cd, bread, exec")]),s._v(" "),t("h2",{attrs:{id:"echo-exit"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#echo-exit"}},[s._v("#")]),s._v(" echo, exit")]),s._v(" "),t("h2",{attrs:{id:"元字符与控制运算符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#元字符与控制运算符"}},[s._v("#")]),s._v(" 元字符与控制运算符")]),s._v(" "),t("p",[s._v("|\n&\n;\n(\n)\n<")]),s._v(" "),t("blockquote"),s._v(" "),t("p",[s._v("||\n&&\n&\n;\n;;\n|\n(\n)")]),s._v(" "),t("h2",{attrs:{id:"环境变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#环境变量"}},[s._v("#")]),s._v(" 环境变量")]),s._v(" "),t("p",[s._v("USER\t登录用户的名称\nUID\t登录用户的用户 id 数字\nHOME\t用户的主目录\nPWD\t当前工作目录\nSHELL\tshell 的名称\n$\t运行的 bash shell（或其他）进程的进程 id（或 PID）\nPPID\t启动此进程的进程的进程 id（也就是父进程的 id）\n?\t上一个命令的退出代码\nexport")]),s._v(" "),t("p",[s._v("$$\nenv\nset\nunset\n$-\nhistory\nhistory -d N | !!最近 | !N 第n个历史 | !-N 第n个命令之前的 | !# 当前命令 | !string string开头的最新命令 | !?string? 包含string的最新命令")]),s._v(" "),t("h2",{attrs:{id:"shell-内置命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shell-内置命令"}},[s._v("#")]),s._v(" shell 内置命令")]),s._v(" "),t("ol",[t("li",[s._v("pstree 树装展示正在运行的进程")]),s._v(" "),t("li",[s._v("vmstat 监控linux系统性能数据的简易工具")]),s._v(" "),t("li",[s._v("bg 后台执行，fg %jobNumber 前台执行")]),s._v(" "),t("li",[s._v("jobs 所有后台进程")]),s._v(" "),t("li",[s._v("暂停程序并放到后台 ctrl-Z，在一个命令的最后 + & 也可放到后台执行")]),s._v(" "),t("li",[s._v("nohup cmd 不挂断地运行命令")]),s._v(" "),t("li",[s._v("uname 当前用户")]),s._v(" "),t("li",[s._v("w 用户信息")]),s._v(" "),t("li",[s._v("sh -x xx.sh")]),s._v(" "),t("li",[s._v("let a=5+4 或 a++")]),s._v(" "),t("li",[s._v("exec 调用并执行指令的命令")])]),s._v(" "),t("h2",{attrs:{id:"变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[s._v("#")]),s._v(" 变量")]),s._v(" "),t("ol",[t("li",[s._v('在双引号内 "$var"')]),s._v(" "),t("li",[s._v("awk中使用外部变量 awk -v innerVar = $var 或 awk '{print v1,v2}' v1=$var v2=$var2 filename 即输入来自文件")]),s._v(" "),t("li",[s._v("awk中的内置变量 'innerVar'")])]),s._v(" "),t("h2",{attrs:{id:"编辑器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编辑器"}},[s._v("#")]),s._v(" 编辑器")]),s._v(" "),t("ol",[t("li",[s._v("sed [options] ('定址 命令' 或 -f scriptFile / -e 'script') files   文本处理，当前处理行存储在临时缓冲区，完成后送到屏幕，接着处理下一行。用户文本编辑。")])]),s._v(" "),t("p",[s._v("包含功能：查找打印、替换行/字符、插入、删除、读写、缓冲区与模板")]),s._v(" "),t("ul",[t("li",[s._v("定址")])]),s._v(" "),t("ol",[t("li",[s._v("指定行：3；2,5；$最后一行；")]),s._v(" "),t("li",[s._v("指定内容，可与元字符一起用：/^str/,/endStr$/")]),s._v(" "),t("li",[s._v("行数与内容组合：10,/str/")]),s._v(" "),t("li",[s._v("命令位于：首位：s, w, r；末位：p, d, h, H；可gp")])]),s._v(" "),t("ul",[t("li",[s._v("命令：")])]),s._v(" "),t("ol",[t("li",[s._v("插入：a, i\\")]),s._v(" "),t("li",[s._v("替换：指定字符 s，选定行改为新的文本 c\\")]),s._v(" "),t("li",[s._v("内容到缓冲区：拷贝 h、追加 H")]),s._v(" "),t("li",[s._v("获得缓冲区内容：并替代 g、追加 G 到当前模板")]),s._v(" "),t("li",[s._v("删除行： d, 删除第一行D,")]),s._v(" "),t("li",[s._v("下一个输入行：读取 n 用下一个命令处理, 追加 N 到模板后面 ？")]),s._v(" "),t("li",[s._v("退出：q")]),s._v(" "),t("li",[s._v("到脚本中带标记的地方、if分支、错误分支：b/t/T label 标记")]),s._v(" "),t("li",[s._v("读、写、追加：r/w/W file 从file中行")]),s._v(" "),t("li",[s._v("！所选行以外起作用")]),s._v(" "),t("li",[s._v("= 打印当前行号")]),s._v(" "),t("li",[s._v("# 把注释扩展到下一换行符以前")]),s._v(" "),t("li",[s._v("打印：p P(第一行)")])]),s._v(" "),t("ul",[t("li",[s._v("替换标记")])]),s._v(" "),t("ol",[t("li",[s._v("Ng 行内全面替换，从第N处开始匹配替换")]),s._v(" "),t("li",[s._v("x 互换模板与缓冲区中的文本")]),s._v(" "),t("li",[s._v("y 把一个字符翻译为另外的字符  与 s的区别？")]),s._v(" "),t("li",[s._v("\\1 子串匹配标记")]),s._v(" "),t("li",[s._v("& 已匹配字符串标记")]),s._v(" "),t("li",[s._v("p 打印行")])]),s._v(" "),t("ul",[t("li",[s._v("元字符集-----与正则类似")])]),s._v(" "),t("ol",[t("li",[s._v("(...) 保存匹配的子串")]),s._v(" "),t("li",[s._v("& 保存搜索字符，用来替换其他字符")]),s._v(" "),t("li",[s._v("<,> 以...开头或结尾的单词的行")])]),s._v(" "),t("ul",[t("li",[s._v("选项")])]),s._v(" "),t("ol",[t("li",[s._v("e 进行多个sed命令")]),s._v(" "),t("li",[s._v("n 取消默认的输出")])]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# '范围与操作/匹配/替换/标记'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 格式如：'命令/匹配/替换/标记(对匹配到的第n个执行操作1/g/p/[w test1写入到文件])'  或 '元字符 命令'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ! 的使用")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用数字方式寻址 (2/2,3/2,$)s")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用文本模式过滤器 sed '/abcd/s/origin/replace/' filename")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 组合命令 sed '2{s/a/A/  s/b/B/}' filename")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除行 (2/2,3/2,$)d  '/^content/d'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 元字符集")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 多个表达式之间用;分隔")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将book替换成books，也可以将定界符/ 改为其他字符，如: , |")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/book/books'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 全部将book替换成books")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/book/books/g'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只打印执行的行")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -n "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/book/books/p'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定界符出现在内部时，需要进行转义，将/bin 替换成/usr/local/bin")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/\\/bin/\\/usr\\/local\\/bin/g'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除空白行  前面为查找，后面直接执行命令；未执行成功")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^$/d'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除第2行")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2d'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除从第2到末尾行")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2,$d'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除最后一行")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$d'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ??? number在这里是关键字？")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/number 1/d'")]),s._v(" ./test\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 范围")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/1/,/3/d'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除以...开始的行 ？")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^test/d'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 匹配每个单词，添加[]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/\\w\\+/[&]/g'")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 包含变量时，需要用双引号，$test是变量")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$test")]),s._v('/HELLO"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# e 同一行执行多条命令")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -e "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'cmd'")]),s._v(" -e "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'cmd'")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行结果后面会多一个%？")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 插入")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3i\\\nThis is an appended line.'")]),s._v(" ./test\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 追加")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$a\\\nThis is a new line of text.'")]),s._v(" ./test\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 修改行")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3c\\\nThis a changed line of text.'")]),s._v(" ./test\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/number 1/c\\\nThis a changed line of text.'")]),s._v(" ./test\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将filename内容第一和第二行写入到file")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1,2w file'")]),s._v(" filename\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 读取file，显示在3行之后")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3r file'")]),s._v(" filename\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 复合命令")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1,20s/My$/You/gp'")]),s._v(" filename\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查找与替换串之间的分隔符变成了#")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s#My#Your#g'")]),s._v(" datafile\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1至20行内，字母小写转成大写，1替换成^，2替换成$")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1,20y/hrwang12/HRWANG^$/'")]),s._v(" datafile\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 组合命令，被匹配时，则移动到下一行，再进行替换")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/hrwang/{n;s/My/Your/;}'")]),s._v(" datafile\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/hrwang/{s/hrwang/HRWANG/;q;}'")]),s._v(" datafile\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -e "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/hrwang/h'")]),s._v(" -e "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$G'")]),s._v(" datafile\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -e "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/hrwang/H'")]),s._v(" -e "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$G'")]),s._v(" datafile\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 通过上面两条命令，你会发现h会把原来暂存缓冲区的内容清除，只保存最近一次执行h时保存进去的模式空间的内容。而H命令则把每次匹配hrwnag的行都追加保存在暂存缓冲区。")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -e "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/hrwang/H'")]),s._v(" -e "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$g'")]),s._v(" datafile\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -e "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/hrwang/H'")]),s._v(" -e "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$G'")]),s._v(" datafile\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 通过上面两条命令，你会发现g把暂存缓冲区中的内容替换掉了模式空间中当前行的内容，此处即替换了最后一行。而G命令则把暂存缓冲区的内容追加到了模式空间的当前行后。此处即追加到了末尾。")]),s._v("\n\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br"),t("span",{staticClass:"line-number"},[s._v("65")]),t("br"),t("span",{staticClass:"line-number"},[s._v("66")]),t("br"),t("span",{staticClass:"line-number"},[s._v("67")]),t("br"),t("span",{staticClass:"line-number"},[s._v("68")]),t("br"),t("span",{staticClass:"line-number"},[s._v("69")]),t("br"),t("span",{staticClass:"line-number"},[s._v("70")]),t("br"),t("span",{staticClass:"line-number"},[s._v("71")]),t("br"),t("span",{staticClass:"line-number"},[s._v("72")]),t("br"),t("span",{staticClass:"line-number"},[s._v("73")]),t("br"),t("span",{staticClass:"line-number"},[s._v("74")]),t("br"),t("span",{staticClass:"line-number"},[s._v("75")]),t("br"),t("span",{staticClass:"line-number"},[s._v("76")]),t("br"),t("span",{staticClass:"line-number"},[s._v("77")]),t("br"),t("span",{staticClass:"line-number"},[s._v("78")]),t("br"),t("span",{staticClass:"line-number"},[s._v("79")]),t("br"),t("span",{staticClass:"line-number"},[s._v("80")]),t("br"),t("span",{staticClass:"line-number"},[s._v("81")]),t("br")])]),t("ol",{attrs:{start:"2"}},[t("li",[s._v("gawk -f bash.sh file  或 gwak '{print $1}' data")])]),s._v(" "),t("ul",[t("li",[s._v("$0 整行  $1 第一个数据字段")]),s._v(" "),t("li",[s._v("F 正在读取使用其他分隔符的文本")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("BEGIN "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nEND "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("ol",{attrs:{start:"3"}},[t("li",[s._v("awk 匹配和处理输入数据，用于数据分析生成报告；以空格为默认分隔符。awk '[pattern + action]' files 根据模式查找并执行相应的动作；1. 执行begin语句块；2. 从文件或标准输入读取一行，执行模式语句块，从第一行到最后重复执行该语句块，默认执行print；3. 读到末尾时，执行end语句块。")])]),s._v(" "),t("ul",[t("li",[s._v("\\n为一条记录，默认空白符为一个数据域")]),s._v(" "),t("li",[s._v("awk  -F ':' '{print $1 \"\\t\" $7}'   分隔符可以不加引号，大括号中的语句可以是多个，以;分隔")]),s._v(" "),t("li",[s._v("awk  -F ':' 'BEGIN {print \"\"} {print $1 \"\\t\" $7} END{print}'  添加头尾")]),s._v(" "),t("li",[s._v("有条件、循环语句，还支持数组")]),s._v(" "),t("li",[s._v("内置变量\n$n 当前记录的第n个字段，比如n为1表示第一个字段，n为2表示第二个字段。\n$0 这个变量包含执行过程中当前行的文本内容。\n[N] ARGC 命令行参数的数目。\n[G] ARGIND 命令行中当前文件的位置（从0开始算）。\n[N] ARGV 包含命令行参数的数组。\n[G] CONVFMT 数字转换格式（默认值为%.6g）。\n[P] ENVIRON 环境变量关联数组。\n[N] ERRNO 最后一个系统错误的描述。\n[G] FIELDWIDTHS 字段宽度列表（用空格键分隔）。\n[A] FILENAME 当前输入文件的名。\n[P] FNR 同NR，但相对于当前文件。\n[A] FS 字段分隔符（默认是任何空格）。\n[G] IGNORECASE 如果为真，则进行忽略大小写的匹配。\n[A] NF 表示字段数，在执行过程中对应于当前的字段数。\n[A] NR 表示记录数，在执行过程中对应于当前的行号。\n[A] OFMT 数字的输出格式（默认值是%.6g）。\n[A] OFS 输出字段分隔符（默认值是一个空格）。\n[A] ORS 输出记录分隔符（默认值是一个换行符）。\n[A] RS 记录分隔符（默认是一个换行符）。\n[N] RSTART 由match函数所匹配的字符串的第一个位置。\n[N] RLENGTH 由match函数所匹配的字符串的长度。\n[N] SUBSEP 数组下标分隔符（默认值是34）。")]),s._v(" "),t("li",[s._v('数组定义 arr[1]=""; 或arr["str"]=""; 相关函数')]),s._v(" "),t("li",[s._v("语句：for(a in arr){}")]),s._v(" "),t("li",[s._v("内置函数、算术、赋值、逻辑、与正则(~/~! /正则/)、关系、其他($: 字符引用，空格：字符串连接，?: 条件表达式，in：数组中是否存在某键值)运算")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("awk")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("pattern + action"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'BEGIN{count=0; print "count is", count} {count++; print $0;} END {print "count is", count}\'')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ol",{attrs:{start:"4"}},[t("li",[s._v("grep [options] pattern [file...] 文本查找")])]),s._v(" "),t("ul",[t("li",[s._v("options")])]),s._v(" "),t("ol",[t("li",[t("p",[s._v("正则：不支持 F；perl正则 P；扩展正则 E；基础正则 G")])]),s._v(" "),t("li",[t("p",[s._v("匹配：整个文本行 x；整个单词 w")])]),s._v(" "),t("li",[t("p",[s._v("显示匹配结果：只打印匹配的行数 c；列出匹配的文本及行号 n；只列出匹配的文本的文件名 l；不显示文件名前缀：h；只显示不匹配的行 v")])]),s._v(" "),t("li",[t("p",[s._v("其他：忽略大小写 i；不显示错误信息 s；递归搜索 r；以退出码形式表示是否搜索成功，不输出匹配结果 q；匹配文本与文件头的偏移量 b")])]),s._v(" "),t("li",[t("p",[s._v("多匹配模式：e 前后为逻辑与的关系，先匹配一个模式再将grep结果作为查询文件路径依次向后传递；前面必须添加-l，否则会将匹配成功的“文件内容”作为要查询的“文件名”向后传递")])]),s._v(" "),t("li",[t("p",[s._v("匹配前后的几行：-5；之后几行：-A5；之前几行：-B5")])]),s._v(" "),t("li",[t("p",[s._v("统计查找到的次数：c")])]),s._v(" "),t("li",[t("p",[s._v("二进制文件：忽略二进制 I；二进制文件以文本文件搜寻：-a")])]),s._v(" "),t("li",[t("p",[s._v("xargs")])])]),s._v(" "),t("h2",{attrs:{id:"命令执行方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#命令执行方式"}},[s._v("#")]),s._v(" 命令执行方式")]),s._v(" "),t("ol",[t("li",[s._v("管道方式")]),s._v(" "),t("li",[s._v('grep -i "mailx" '),t("code",[s._v('find /home/tyrone -type f -name "*.txt" -exec grep -l "hello world" {} \\;')])]),s._v(" "),t("li",[s._v('find /home/tyrone -name "*.txt" -exec grep -l "hello world" {} ; | xargs grep -i "mailx"')])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("let")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"t1 = '),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("((")]),s._v("a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")])]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"t1 = '),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$t1")]),s._v(", a = "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$a")]),s._v(", b = "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$b")]),s._v('"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello world"')]),s._v(" -rl /home/tyrone "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" -l "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mailx"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /home/tyrone/result5.txt\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" result5.txt "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v(" line\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${line}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${line}")]),s._v(".bak20150616\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/hello world/letitia/g"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello world"')]),s._v(" -rl $"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("line"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("done")]),s._v("\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("h2",{attrs:{id:"xargs-给其他命令传递参数的一个过滤器，将标准输入转换成命令行参数，通过该命令的换行和空白符，都会被处理空格符取代，即变成单行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xargs-给其他命令传递参数的一个过滤器，将标准输入转换成命令行参数，通过该命令的换行和空白符，都会被处理空格符取代，即变成单行"}},[s._v("#")]),s._v(" xargs 给其他命令传递参数的一个过滤器，将标准输入转换成命令行参数，通过该命令的换行和空白符，都会被处理空格符取代，即变成单行")]),s._v(" "),t("ol",[t("li",[s._v("n3 一行3个字符")]),s._v(" "),t("li",[s._v('-d 自定义定界符  echo "nameXnameXnameXname" | xargs -dX')]),s._v(" "),t("li",[s._v("-I 指定一个替换字符串{}，每一个参数命令都会被执行一次？即")])]),s._v(" "),t("h2",{attrs:{id:"信号-trap-rm-f-dir-work-dir2-exit-1-2-收到信号时执行该命令；复位-trap-1-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#信号-trap-rm-f-dir-work-dir2-exit-1-2-收到信号时执行该命令；复位-trap-1-2"}},[s._v("#")]),s._v(' 信号 trap "rm -f $dir/work$$ dir2; exit" 1 2 收到信号时执行该命令；复位 trap 1 2;')]),s._v(" "),t("ol",[t("li",[s._v("sigHup---1，用户端连接结束时发出，登录时系统linux会分配给登录用户一个终端，包含前台进程和后台进程组，属于这个Session，用户退出登录时，前程组和后台会收到这个信号")]),s._v(" "),t("li",[s._v("sigInt---2，程序终止，用户输入ctrl+C时发出")]),s._v(" "),t("li",[s._v("sigQuit--3，与2类似")]),s._v(" "),t("li",[s._v("sigFpe---8，算术去处错误时")]),s._v(" "),t("li",[s._v("sigKill--9，用来立即终止程序的运行，信号不能被阻塞、处理和忽略。")]),s._v(" "),t("li",[s._v("sigAlrm--14，时钟定时信号")]),s._v(" "),t("li",[s._v("sigTerm--15，程序结束信号，信号可以被阻塞和处理，通常用来要求程序自己正常退出。")])])])}],!1,null,null,null);n.default=e.exports}}]);